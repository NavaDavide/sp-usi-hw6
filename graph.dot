digraph types {
  rankdir="BT"
Dimensionable[shape="record", label="{ABSTRACT_Dimensionable | isArray()Z|getArrayDepth()I}"]
ScopeAndDeclarationFinder[shape="record", label="{ScopeAndDeclarationFinder | {init()V|addScope(Lnet/sourceforge/pmd/symboltable/Scope;Lnet/sourceforge/pmd/ast/SimpleNode;)V|createLocalScope(Lnet/sourceforge/pmd/ast/SimpleNode;)V|createMethodScope(Lnet/sourceforge/pmd/ast/SimpleNode;)V|createClassScope(Lnet/sourceforge/pmd/ast/SimpleNode;)V|createSourceFileScope(Lnet/sourceforge/pmd/ast/SimpleNode;)V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceBodyDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBlock;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;|cont(Lnet/sourceforge/pmd/ast/SimpleJavaNode;)V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTPackageDeclaration[shape="record", label="{ASTPackageDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Java13Handler[shape="record", label="{Java13Handler | {init()V|getParser()Lnet/sourceforge/pmd/parsers/Parser;}"]
Resolver[shape="record", label="{ABSTRACT_Resolver | resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
Designer[shape="record", label="{Designer | {createParser()Lnet/sourceforge/pmd/ast/JavaParser;|createJspParser()Lnet/sourceforge/pmd/jsp/ast/JspParser;|getCompilationUnit()Lnet/sourceforge/pmd/ast/SimpleNode;|getJDKVersion()Lnet/sourceforge/pmd/TargetJDKVersion;|getSourceType()Lnet/sourceforge/pmd/SourceType;|init()V|createMenuBar()Ljavax/swing/JMenuBar;|createRuleXML()V|createASTPanel()Ljavax/swing/JComponent;|createXPathResultPanel()Ljavax/swing/JComponent;|createXPathQueryPanel()Ljavax/swing/JPanel;|createGoButton()Ljavax/swing/JButton;|main([Ljava/lang/String;)V|copyXmlToClipboard()V|getXmlString(Lnet/sourceforge/pmd/ast/SimpleNode;)Ljava/lang/String;|lostOwnership(Ljava/awt/datatransfer/Clipboard;Ljava/awt/datatransfer/Transferable;)V|access_000(Lnet/sourceforge/pmd/util/designer/Designer;)Lnet/sourceforge/pmd/ast/SimpleNode;|access_100(Lnet/sourceforge/pmd/util/designer/Designer;)Ljavax/swing/JTextArea;|access_200(Lnet/sourceforge/pmd/util/designer/Designer;)Lnet/sourceforge/pmd/SourceType;|access_300(Lnet/sourceforge/pmd/util/designer/Designer;)Lnet/sourceforge/pmd/util/designer/CodeEditorTextPane;|access_400(Lnet/sourceforge/pmd/util/designer/Designer;)Lnet/sourceforge/pmd/util/designer/DFAPanel;|access_500(Lnet/sourceforge/pmd/util/designer/Designer;)Ljavax/swing/DefaultListModel;|access_600(Lnet/sourceforge/pmd/util/designer/Designer;)Ljavax/swing/JTextArea;|access_700(Lnet/sourceforge/pmd/util/designer/Designer;)Ljavax/swing/JList;|class_(Ljava/lang/String;)Ljava/lang/Class;|access_800(Lnet/sourceforge/pmd/util/designer/Designer;)V|access_900(Lnet/sourceforge/pmd/util/designer/Designer;)V}"]
TeeOutputStream[shape="record", label="{TeeOutputStream | {init(Ljava/io/OutputStream;Ljava/io/File;)V|newLog()V|openLog()V|closeLog()V|close()V|flush()V|write(I)V|finalize()V|version()V}"]
PMDTask[shape="record", label="{PMDTask | {init()V|setShortFilenames(Z)V|setTargetJDK(Ljava/lang/String;)V|setExcludeMarker(Ljava/lang/String;)V|setFailOnError(Z)V|setFailOnRuleViolation(Z)V|setRuleSetFiles(Ljava/lang/String;)V|setEncoding(Ljava/lang/String;)V|setFailuresPropertyName(Ljava/lang/String;)V|setMinimumPriority(I)V|addFileset(Lorg/apache/tools/ant/types/FileSet;)V|addFormatter(Lnet/sourceforge/pmd/ant/Formatter;)V|setClasspath(Lorg/apache/tools/ant/types/Path;)V|getClasspath()Lorg/apache/tools/ant/types/Path;|createClasspath()Lorg/apache/tools/ant/types/Path;|setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V|execute()V|logRulesUsed(Lnet/sourceforge/pmd/RuleSets;)V|validate()V|getNestedRuleSetFiles()Ljava/lang/String;|createLongClasspath()Lorg/apache/tools/ant/types/Path;|addRuleset(Lnet/sourceforge/pmd/ant/RuleSetWrapper;)V}"]
ASTBooleanLiteral[shape="record", label="{ASTBooleanLiteral | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setTrue()V|isTrue()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|dump(Ljava/lang/String;)V}"]
ASTJspExpression[shape="record", label="{ASTJspExpression | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SourceType[shape="record", label="{SourceType | {init(Ljava/lang/String;)V|getId()Ljava/lang/String;|setId(Ljava/lang/String;)V|equals(Ljava/lang/Object;)Z|hashCode()I|toString()Ljava/lang/String;|clinit()V}"]
SourceTypeHandlerBroker[shape="record", label="{SourceTypeHandlerBroker | {init()V|initialize()V|getVisitorsFactoryForSourceType(Lnet/sourceforge/pmd/SourceType;)Lnet/sourceforge/pmd/sourcetypehandlers/SourceTypeHandler;}"]
ASTAdditiveExpression[shape="record", label="{ASTAdditiveExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
PathElement[shape="record", label="{PathElement | {init(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|init(Lnet/sourceforge/pmd/dfa/IDataFlowNode;Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|isPseudoPathElement()Z}"]
ASTTypeArgument[shape="record", label="{ASTTypeArgument | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Attribute[shape="record", label="{Attribute | {init(Lnet/sourceforge/pmd/ast/Node;Ljava/lang/String;Ljava/lang/reflect/Method;)V|getValue()Ljava/lang/String;|getName()Ljava/lang/String;|getParent()Lnet/sourceforge/pmd/ast/Node;|toString()Ljava/lang/String;|clinit()V}"]
OnlyOneReturnRule[shape="record", label="{OnlyOneReturnRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTInitializer[shape="record", label="{ASTInitializer | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|isStatic()Z|setStatic()V|dump(Ljava/lang/String;)V}"]
JavaTokenizer[shape="record", label="{JavaTokenizer | {init()V|setProperties(Ljava/util/Properties;)V|tokenize(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V|setIgnoreLiterals(Z)V|setIgnoreIdentifiers(Z)V}"]
VariableAccess[shape="record", label="{VariableAccess | {init(ILjava/lang/String;)V|getAccessType()I|accessTypeMatches(I)Z|isDefinition()Z|isReference()Z|isUndefinition()Z|getVariableName()Ljava/lang/String;|toString()Ljava/lang/String;}"]
SourceTypeHandler[shape="record", label="{ABSTRACT_SourceTypeHandler | getParser()Lnet/sourceforge/pmd/parsers/Parser;|getDataFlowFacade()Lnet/sourceforge/pmd/sourcetypehandlers/VisitorStarter;|getSymbolFacade()Lnet/sourceforge/pmd/sourcetypehandlers/VisitorStarter;}"]
ASTImplementsList[shape="record", label="{ASTImplementsList | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTMemberValuePairs[shape="record", label="{ASTMemberValuePairs | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTDefaultValue[shape="record", label="{ASTDefaultValue | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTMethodDeclaration[shape="record", label="{ASTMethodDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|dump(Ljava/lang/String;)V|getMethodName()Ljava/lang/String;|isSyntacticallyPublic()Z|isSyntacticallyAbstract()Z|isPublic()Z|isAbstract()Z|isInterfaceMember()Z|isVoid()Z|getResultType()Lnet/sourceforge/pmd/ast/ASTResultType;|getBlock()Lnet/sourceforge/pmd/ast/ASTBlock;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
TokenMgrError[shape="record", label="{TokenMgrError | {addEscapes(Ljava/lang/String;)Ljava/lang/String;|LexicalError(ZIIILjava/lang/String;C)Ljava/lang/String;|getMessage()Ljava/lang/String;|init()V|init(Ljava/lang/String;I)V|init(ZIIILjava/lang/String;CI)V}"]
4[shape="record", label="{4 | {init(Lnet/sourceforge/pmd/jaxen/DocumentNavigator;Lnet/sourceforge/pmd/ast/Node;)V|getFirstNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getNextNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;}"]
5[shape="record", label="{5 | {init(Lnet/sourceforge/pmd/jaxen/DocumentNavigator;Lnet/sourceforge/pmd/ast/Node;)V|getFirstNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getNextNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;}"]
2[shape="record", label="{2 | {init(Lnet/sourceforge/pmd/jaxen/DocumentNavigator;Lnet/sourceforge/pmd/ast/Node;)V|getFirstNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getNextNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;}"]
InefficientEmptyStringCheck[shape="record", label="{InefficientEmptyStringCheck | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|isCompareZero(Lnet/sourceforge/pmd/ast/ASTEqualityExpression;)Z|isStringLength(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Z|checkComparison(Lnet/sourceforge/pmd/ast/ASTEqualityExpression;I)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ConfigFileTokenManager[shape="record", label="{ConfigFileTokenManager | {setDebugStream(Ljava/io/PrintStream;)V|jjStopStringLiteralDfa_0(IJ)I|jjStartNfa_0(IJ)I|jjStopAtPos(II)I|jjStartNfaWithStates_0(III)I|jjMoveStringLiteralDfa0_0()I|jjMoveStringLiteralDfa1_0(J)I|jjMoveStringLiteralDfa2_0(JJ)I|jjMoveStringLiteralDfa3_0(JJ)I|jjMoveStringLiteralDfa4_0(JJ)I|jjMoveStringLiteralDfa5_0(JJ)I|jjMoveStringLiteralDfa6_0(JJ)I|jjMoveStringLiteralDfa7_0(JJ)I|jjMoveStringLiteralDfa8_0(JJ)I|jjMoveStringLiteralDfa9_0(JJ)I|jjMoveStringLiteralDfa10_0(JJ)I|jjCheckNAdd(I)V|jjAddStates(II)V|jjCheckNAddTwoStates(II)V|jjCheckNAddStates(II)V|jjCheckNAddStates(I)V|jjMoveNfa_0(II)I|jjMoveStringLiteralDfa0_3()I|jjMoveStringLiteralDfa1_3(J)I|jjMoveStringLiteralDfa0_1()I|jjMoveNfa_1(II)I|jjMoveStringLiteralDfa0_2()I|jjMoveStringLiteralDfa1_2(J)I|init(Ldacapo/parser/SimpleCharStream;)V|init(Ldacapo/parser/SimpleCharStream;I)V|ReInit(Ldacapo/parser/SimpleCharStream;)V|ReInitRounds()V|ReInit(Ldacapo/parser/SimpleCharStream;I)V|SwitchTo(I)V|jjFillToken()Ldacapo/parser/Token;|getNextToken()Ldacapo/parser/Token;|SkipLexicalActions(Ldacapo/parser/Token;)V|MoreLexicalActions()V|clinit()V}"]
ExternalRuleID[shape="record", label="{ExternalRuleID | {init(Ljava/lang/String;)V|getFilename()Ljava/lang/String;|getRuleName()Ljava/lang/String;|toString()Ljava/lang/String;}"]
SourceFileOrDirectoryFilter[shape="record", label="{SourceFileOrDirectoryFilter | {init(Lnet/sourceforge/pmd/SourceFileSelector;)V|accept(Ljava/io/File;Ljava/lang/String;)Z}"]
3[shape="record", label="{3 | {init(Lnet/sourceforge/pmd/jaxen/DocumentNavigator;Lnet/sourceforge/pmd/ast/Node;)V|getFirstNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getNextNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;}"]
ParseExceptionHandler[shape="record", label="{ParseExceptionHandler | {init(Ljavax/swing/JFrame;Ljava/lang/Exception;)V|init()V|actionPerformed(Ljava/awt/event/ActionEvent;)V}"]
MethodReturnsInternalArray[shape="record", label="{MethodReturnsInternalArray | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTExtendsList[shape="record", label="{ASTExtendsList | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
VariableAccessException[shape="record", label="{VariableAccessException | {init()V|init(Ljava/lang/String;)V}"]
CharStream[shape="record", label="{ABSTRACT_CharStream | readChar()C|getColumn()I|getLine()I|getEndColumn()I|getEndLine()I|getBeginColumn()I|getBeginLine()I|backup(I)V|BeginToken()C|GetImage()Ljava/lang/String;|GetSuffix(I)[C|Done()V}"]
Token[shape="record", label="{Token | {init()V|toString()Ljava/lang/String;|newToken(I)Lnet/sourceforge/pmd/jsp/ast/Token;}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/jaxen/DocumentNavigator;Lnet/sourceforge/pmd/ast/Node;)V|getFirstNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getNextNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;}"]
ASTPreIncrementExpression[shape="record", label="{ASTPreIncrementExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTDoctypeExternalId[shape="record", label="{ASTDoctypeExternalId | {isHasPublicId()Z|getUri()Ljava/lang/String;|setUri(Ljava/lang/String;)V|getPublicId()Ljava/lang/String;|setPublicId(Ljava/lang/String;)V|toString(Ljava/lang/String;)Ljava/lang/String;|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UnusedLocalVariableRule[shape="record", label="{UnusedLocalVariableRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|actuallyUsed(Ljava/util/List;)Z}"]
JspParserTreeConstants[shape="record", label="{ABSTRACT_JspParserTreeConstants | clinit()V}"]
JJCalls[shape="record", label="{JJCalls | {init()V}"]
DFAListener[shape="record", label="{DFAListener | {init(Lnet/sourceforge/pmd/util/designer/Designer;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|init(Lnet/sourceforge/pmd/util/designer/Designer;Lnet/sourceforge/pmd/util/designer/Designer$1;)V}"]
ASTLabeledStatement[shape="record", label="{ASTLabeledStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTClassOrInterfaceBody[shape="record", label="{ASTClassOrInterfaceBody | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UnaryFunction[shape="record", label="{ABSTRACT_UnaryFunction | applyTo(Ljava/lang/Object;)V}"]
ASTImportDeclaration[shape="record", label="{ASTImportDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setImportOnDemand()V|isImportOnDemand()Z|setStatic()V|isStatic()Z|getImportedNameNode()Lnet/sourceforge/pmd/ast/ASTName;|getImportedName()Ljava/lang/String;|getPackageName()Ljava/lang/String;|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
DummyVisitorStarter[shape="record", label="{DummyVisitorStarter | {init()V|start(Ljava/lang/Object;)V}"]
ImmutableField[shape="record", label="{ImmutableField | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|initializedWhenDeclared(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)Z|initializedInConstructor(Ljava/util/List;Ljava/util/Set;)I|inLoopOrTry(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|inAnonymousInnerClass(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|findAllConstructors(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;)Ljava/util/List;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTTypeBound[shape="record", label="{ASTTypeBound | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ConfigFile[shape="record", label="{ConfigFile | {main([Ljava/lang/String;)V|unQuote(Ldacapo/parser/Token;)Ljava/lang/String;|unHex(Ldacapo/parser/Token;)Ljava/lang/String;|configFile()Ldacapo/parser/Config;|config()Ldacapo/parser/Config;|sizeSpec(Ldacapo/parser/Config;)V|sizeClause(Ldacapo/parser/Config;Ljava/lang/String;)V|outputFile(Ldacapo/parser/Config;Ljava/lang/String;)V|outputClause(Ldacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V|digestOption(Ldacapo/parser/Config;Ljava/lang/String;Ljava/lang/String;)V|description(Ldacapo/parser/Config;)V|descElement(Ldacapo/parser/Config;)V|descId()Ljava/lang/String;|string()Ljava/lang/String;|integer()I|longInt()J|hex()Ljava/lang/String;|jj_la1_0()V|jj_la1_1()V|init(Ljava/io/InputStream;)V|ReInit(Ljava/io/InputStream;)V|init(Ljava/io/Reader;)V|ReInit(Ljava/io/Reader;)V|init(Ldacapo/parser/ConfigFileTokenManager;)V|ReInit(Ldacapo/parser/ConfigFileTokenManager;)V|jj_consume_token(I)Ldacapo/parser/Token;|getNextToken()Ldacapo/parser/Token;|getToken(I)Ldacapo/parser/Token;|jj_ntk()I|generateParseException()Ldacapo/parser/ParseException;|enable_tracing()V|disable_tracing()V|clinit()V}"]
LongParameterListRule[shape="record", label="{LongParameterListRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
UnsynchronizedStaticDateFormatter[shape="record", label="{UnsynchronizedStaticDateFormatter | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
PmdHarness[shape="record", label="{PmdHarness | {init(Ldacapo/parser/Config;Ljava/io/File;)V|iterate(Ljava/lang/String;)V|collectFilesFromFile(Ljava/lang/String;)Ljava/lang/String;|commaSeparate(Ljava/util/List;)Ljava/lang/String;}"]
EvaluationResultsPanel[shape="record", label="{EvaluationResultsPanel | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;)V|init()V|viewerModelChanged(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V|access_000(Lnet/sourceforge/pmd/util/viewer/gui/EvaluationResultsPanel;)Ljavax/swing/JList;|access_100(Lnet/sourceforge/pmd/util/viewer/gui/EvaluationResultsPanel;)Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;}"]
RuleViolationComparator[shape="record", label="{RuleViolationComparator | {init()V|compare(Ljava/lang/Object;Ljava/lang/Object;)I}"]
SwitchDensityRule[shape="record", label="{SwitchDensityRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;}"]
AssignmentToNonFinalStatic[shape="record", label="{AssignmentToNonFinalStatic | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|initializedInConstructor(Ljava/util/List;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
LocalScope[shape="record", label="{LocalScope | {init()V|addVariableNameOccurrence(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|getVariableDeclarations()Ljava/util/Map;|addDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|findVariableHere(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|toString()Ljava/lang/String;}"]
AttributesSubMenu[shape="record", label="{AttributesSubMenu | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;Lnet/sourceforge/pmd/ast/SimpleNode;)V|init()V}"]
ASTPanel[shape="record", label="{ASTPanel | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;)V|init()V|viewerModelChanged(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V|valueChanged(Ljavax/swing/event/TreeSelectionEvent;)V|access_000(Lnet/sourceforge/pmd/util/viewer/gui/ASTPanel;)Ljavax/swing/JTree;|access_100(Lnet/sourceforge/pmd/util/viewer/gui/ASTPanel;)Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;}"]
YAHTMLRenderer[shape="record", label="{YAHTMLRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
XPathFragmentAddingItem[shape="record", label="{XPathFragmentAddingItem | {init(Ljava/lang/String;Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;Ljava/lang/String;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V}"]
ASTFormalParameters[shape="record", label="{ASTFormalParameters | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|getParameterCount()I|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
AnyLanguage[shape="record", label="{AnyLanguage | {init(Ljava/lang/String;)V|getTokenizer()Lnet/sourceforge/pmd/cpd/Tokenizer;|getFileFilter()Ljava/io/FilenameFilter;}"]
ExplicitImportResolver[shape="record", label="{ExplicitImportResolver | {init(Ljava/util/Set;)V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
PreserveStackTrace[shape="record", label="{PreserveStackTrace | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Harness[shape="record", label="{Harness | {init()V|main([Ljava/lang/String;)V}"]
Entry[shape="record", label="{Entry | {init(Lnet/sourceforge/pmd/ast/SimpleNode;)V|bumpDecisionPoints()V|bumpDecisionPoints(I)V|getComplexityAverage()I|init(Lnet/sourceforge/pmd/ast/SimpleNode;Lnet/sourceforge/pmd/rules/CyclomaticComplexity$1;)V|access_100(Lnet/sourceforge/pmd/rules/CyclomaticComplexity$Entry;)I|access_112(Lnet/sourceforge/pmd/rules/CyclomaticComplexity$Entry;I)I|access_200(Lnet/sourceforge/pmd/rules/CyclomaticComplexity$Entry;)Lnet/sourceforge/pmd/ast/SimpleNode;}"]
UnusedImportsRule[shape="record", label="{UnusedImportsRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;|check(Lnet/sourceforge/pmd/ast/SimpleNode;)V}"]
BeanMembersShouldSerializeRule[shape="record", label="{BeanMembersShouldSerializeRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|trimIfPrefix(Ljava/lang/String;)Ljava/lang/String;|isBeanAccessor(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
PMD[shape="record", label="{PMD | {init()V|init(Lnet/sourceforge/pmd/TargetJDKVersion;)V|processFile(Ljava/io/Reader;Lnet/sourceforge/pmd/RuleSets;Lnet/sourceforge/pmd/RuleContext;)V|processFile(Ljava/io/Reader;Lnet/sourceforge/pmd/RuleSets;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/SourceType;)V|getSourceTypeOfFile(Ljava/lang/String;)Lnet/sourceforge/pmd/SourceType;|processFile(Ljava/io/Reader;Lnet/sourceforge/pmd/RuleSet;Lnet/sourceforge/pmd/RuleContext;)V|processFile(Ljava/io/InputStream;Ljava/lang/String;Lnet/sourceforge/pmd/RuleSet;Lnet/sourceforge/pmd/RuleContext;)V|processFile(Ljava/io/InputStream;Ljava/lang/String;Lnet/sourceforge/pmd/RuleSets;Lnet/sourceforge/pmd/RuleContext;)V|processFile(Ljava/io/InputStream;Lnet/sourceforge/pmd/RuleSet;Lnet/sourceforge/pmd/RuleContext;)V|setExcludeMarker(Ljava/lang/String;)V|setJavaVersion(Lnet/sourceforge/pmd/SourceType;)V|main([Ljava/lang/String;)V|processFiles(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/RuleSets;ZZLjava/lang/String;Ljava/lang/String;)V|printRuleNamesInDebug(ZLnet/sourceforge/pmd/RuleSets;)V|collectFilesFromOneName(Ljava/lang/String;Lnet/sourceforge/pmd/SourceFileSelector;)Ljava/util/List;|collectFromCommaDelimitedString(Ljava/lang/String;Lnet/sourceforge/pmd/SourceFileSelector;)Ljava/util/List;|collect(Ljava/lang/String;Lnet/sourceforge/pmd/SourceFileSelector;)Ljava/util/List;|clinit()V}"]
ASTAttributeValue[shape="record", label="{ASTAttributeValue | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
VariableUsageFinderFunction[shape="record", label="{VariableUsageFinderFunction | {init(Ljava/util/Map;)V|applyTo(Ljava/lang/Object;)V|getUsed()Ljava/util/Map;}"]
DataSource[shape="record", label="{ABSTRACT_DataSource | getInputStream()Ljava/io/InputStream;|getNiceFileName(ZLjava/lang/String;)Ljava/lang/String;}"]
ASTAndExpression[shape="record", label="{ASTAndExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JspCharStream[shape="record", label="{JspCharStream | {init(Ljava/io/InputStream;III)V|init(Ljava/io/InputStream;II)V|init(Ljava/io/InputStream;)V|init(Ljava/io/Reader;III)V|init(Ljava/io/Reader;II)V|init(Ljava/io/Reader;)V}"]
ASTSingleMemberAnnotation[shape="record", label="{ASTSingleMemberAnnotation | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UselessOverridingMethod[shape="record", label="{UselessOverridingMethod | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|findFirstDegreeChildrenOfType(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/Class;)Ljava/util/List;|lclFindChildrenOfType(Lnet/sourceforge/pmd/ast/Node;Ljava/lang/Class;Ljava/util/List;)V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
AttributeAxisIterator[shape="record", label="{AttributeAxisIterator | {init(Lnet/sourceforge/pmd/ast/Node;)V|next()Ljava/lang/Object;|hasNext()Z|remove()V|getNextAttribute()Lnet/sourceforge/pmd/jaxen/Attribute;|isAttribute(Ljava/lang/reflect/Method;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
ResourceLoader[shape="record", label="{ResourceLoader | {init()V|loadResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;|loadResourceAsStream(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/io/InputStream;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTMemberSelector[shape="record", label="{ASTMemberSelector | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
StatementAndBraceFinder[shape="record", label="{StatementAndBraceFinder | {init()V|buildDataFlowFor(Lnet/sourceforge/pmd/ast/SimpleJavaNode;)V|visit(Lnet/sourceforge/pmd/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForInit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForUpdate;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;|addForExpressionNode(Lnet/sourceforge/pmd/ast/SimpleNode;Lnet/sourceforge/pmd/dfa/Structure;)V}"]
SourceCode[shape="record", label="{SourceCode | {init(Lnet/sourceforge/pmd/cpd/SourceCode$CodeLoader;)V|getCode()Ljava/util/List;|getCodeBuffer()Ljava/lang/StringBuffer;|getSlice(II)Ljava/lang/String;|getFileName()Ljava/lang/String;}"]
ClassData[shape="record", label="{ClassData | {init(Ljava/lang/String;)V|addInstantiation(Lnet/sourceforge/pmd/rules/AccessorClassGeneration$AllocData;)V|getInstantiationIterator()Ljava/util/Iterator;|addConstructor(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;)V|getPrivateConstructorIterator()Ljava/util/Iterator;|getClassName()Ljava/lang/String;|addClassQualifyingName(Ljava/lang/String;)V|getClassQualifyingNamesList()Ljava/util/List;}"]
ASTTypeArguments[shape="record", label="{ASTTypeArguments | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
1[shape="record", label="{1 | {init(Ljava/lang/String;)V|accept(Ljava/io/File;Ljava/lang/String;)Z}"]
ASTValueBinding[shape="record", label="{ASTValueBinding | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JspParserVisitorAdapter[shape="record", label="{JspParserVisitorAdapter | {init()V|visit(Lnet/sourceforge/pmd/jsp/ast/SimpleNode;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTContent;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDirective;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDirectiveAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspScriptlet;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspComment;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTText;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTUnparsedText;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTElExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTValueBinding;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTCData;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTElement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTAttributeValue;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspExpressionInAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTCommentTag;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTDoctypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTDoctypeExternalId;Ljava/lang/Object;)Ljava/lang/Object;}"]
MethodWithSameNameAsEnclosingClass[shape="record", label="{MethodWithSameNameAsEnclosingClass | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ImageFinderFunction[shape="record", label="{ImageFinderFunction | {init(Ljava/lang/String;)V|init(Ljava/util/List;)V|applyTo(Ljava/lang/Object;)V|getDecl()Lnet/sourceforge/pmd/symboltable/NameDeclaration;}"]
TypeSet[shape="record", label="{TypeSet | {init()V|setASTCompilationUnitPackage(Ljava/lang/String;)V|getASTCompilationUnitPackage()Ljava/lang/String;|addImport(Ljava/lang/String;)V|getImportsCount()I|findClass(Ljava/lang/String;)Ljava/lang/Class;|buildResolvers()V}"]
ASTForStatement[shape="record", label="{ASTForStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
StringUtil[shape="record", label="{StringUtil | {init()V|replaceString(Ljava/lang/String;CLjava/lang/String;)Ljava/lang/String;|replaceString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|appendXmlEscaped(Ljava/lang/StringBuffer;Ljava/lang/String;)V|appendXmlEscaped(Ljava/lang/StringBuffer;Ljava/lang/String;Z)V|clinit()V}"]
ASTMemberValue[shape="record", label="{ASTMemberValue | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
PrimitiveTypeResolver[shape="record", label="{PrimitiveTypeResolver | {init()V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
Matcher[shape="record", label="{Matcher | {init(Ljava/lang/String;Ljava/lang/String;)V|matched()Z|matching()Z|reset()V|match(C)V|flush()V|emit()I|clinit()V}"]
Node_[shape="record", label="{ABSTRACT_Node | jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JavaParserTreeConstants[shape="record", label="{ABSTRACT_JavaParserTreeConstants | clinit()V}"]
ASTMarkerAnnotation[shape="record", label="{ASTMarkerAnnotation | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ParseException[shape="record", label="{ParseException | {init(Lnet/sourceforge/pmd/ast/Token;[[I[Ljava/lang/String;)V|init()V|init(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|add_escapes(Ljava/lang/String;)Ljava/lang/String;}"]
ASTNameList[shape="record", label="{ASTNameList | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTAnnotationTypeDeclaration[shape="record", label="{ASTAnnotationTypeDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTFieldDeclaration[shape="record", label="{ASTFieldDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|isSyntacticallyPublic()Z|isPublic()Z|isSyntacticallyStatic()Z|isStatic()Z|isSyntacticallyFinal()Z|isFinal()Z|isPrivate()Z|isPackagePrivate()Z|isProtected()Z|isInterfaceMember()Z|isArray()Z|getArrayDepth()I|checkType()I|checkDecl()I|dump(Ljava/lang/String;)V|getVariableName()Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTStatement[shape="record", label="{ASTStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
AppendCharacterWithChar[shape="record", label="{AppendCharacterWithChar | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTModifiers[shape="record", label="{ASTModifiers | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ExceptionAsFlowControl[shape="record", label="{ExceptionAsFlowControl | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Java13Parser[shape="record", label="{Java13Parser | {init()V|parse(Ljava/io/Reader;)Ljava/lang/Object;}"]
PositionalIteratorRule[shape="record", label="{PositionalIteratorRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;|getVariableName(Ljava/lang/String;)Ljava/lang/String;|collectNames(Ljava/lang/String;Ljava/util/List;Lnet/sourceforge/pmd/ast/SimpleNode;)V|hasNameAsChild(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|getName(Lnet/sourceforge/pmd/ast/SimpleNode;)Ljava/lang/String;}"]
ASTSwitchStatement[shape="record", label="{ASTSwitchStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
StringToStringRule[shape="record", label="{StringToStringRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;}"]
XPathPanel[shape="record", label="{XPathPanel | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;)V|init()V|getXPathExpression()Ljava/lang/String;|viewerModelChanged(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V}"]
VariableNameDeclaration[shape="record", label="{VariableNameDeclaration | {init(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;)V|getScope()Lnet/sourceforge/pmd/symboltable/Scope;|isArray()Z|isExceptionBlockParameter()Z|isPrimitiveType()Z|getTypeImage()Ljava/lang/String;|isReferenceType()Z|getAccessNodeParent()Lnet/sourceforge/pmd/ast/AccessNode;|getDeclaratorId()Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;|equals(Ljava/lang/Object;)Z|hashCode()I|toString()Ljava/lang/String;}"]
SourceTypeDiscoverer[shape="record", label="{SourceTypeDiscoverer | {init()V|initialize()V|getSourceTypeOfFile(Ljava/io/File;)Lnet/sourceforge/pmd/SourceType;|getSourceTypeOfFile(Ljava/lang/String;)Lnet/sourceforge/pmd/SourceType;|setSourceTypeOfJavaFiles(Lnet/sourceforge/pmd/SourceType;)V|getSourceTypeOfJavaFiles()Lnet/sourceforge/pmd/SourceType;}"]
JavaParserConstants[shape="record", label="{ABSTRACT_JavaParserConstants | clinit()V}"]
MethodInvocation[shape="record", label="{MethodInvocation | {init(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/util/List;Ljava/util/List;Ljava/lang/String;IZ)V|isSuper()Z|getName()Ljava/lang/String;|getArgumentCount()I|getReferenceNames()Ljava/util/List;|getQualifierNames()Ljava/util/List;|getASTPrimaryExpression()Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;|getMethod(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;)Lnet/sourceforge/pmd/rules/ConstructorCallsOverridableMethod$MethodInvocation;|show()V}"]
ASTTypeDeclaration[shape="record", label="{ASTTypeDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|hasSuppressWarningsAnnotationFor(Lnet/sourceforge/pmd/Rule;)Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
AbstractNameDeclaration[shape="record", label="{AbstractNameDeclaration | {init(Lnet/sourceforge/pmd/ast/SimpleNode;)V|getNode()Lnet/sourceforge/pmd/ast/SimpleNode;|getImage()Ljava/lang/String;|getScope()Lnet/sourceforge/pmd/symboltable/Scope;}"]
TokenEntry[shape="record", label="{TokenEntry | {init()V|init(Ljava/lang/String;Ljava/lang/String;I)V|getEOF()Lnet/sourceforge/pmd/cpd/TokenEntry;|clearImages()V|getTokenSrcID()Ljava/lang/String;|getBeginLine()I|getIdentifier()I|getIndex()I|hashCode()I|setHashCode(I)V|equals(Ljava/lang/Object;)Z|compareTo(Ljava/lang/Object;)I|clinit()V}"]
ExcessiveImports[shape="record", label="{ExcessiveImports | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTConditionalExpression[shape="record", label="{ASTConditionalExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setTernary()V|isTernary()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Java14Handler[shape="record", label="{Java14Handler | {init()V|getParser()Lnet/sourceforge/pmd/parsers/Parser;}"]
StringInstantiation[shape="record", label="{StringInstantiation | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
GcCallback[shape="record", label="{GcCallback | {init()V|start(Ljava/lang/String;)V|startWarmup(Ljava/lang/String;)V}"]
MMTkHarness[shape="record", label="{MMTkHarness | {init()V|harnessBegin()V|harnessEnd()V}"]
JUnitAssertionsShouldIncludeMessage[shape="record", label="{JUnitAssertionsShouldIncludeMessage | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTArguments;Ljava/lang/Object;)Ljava/lang/Object;|check(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/ASTArguments;ILjava/lang/String;)V}"]
TooManyFields[shape="record", label="{TooManyFields | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|bumpCounterFor(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;)V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
SimpleRenderer[shape="record", label="{SimpleRenderer | {init()V|render(Ljava/util/Iterator;)Ljava/lang/String;}"]
ASTForInit[shape="record", label="{ASTForInit | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ClassScope[shape="record", label="{ClassScope | {init(Ljava/lang/String;)V|init()V|addDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|addVariableNameOccurrence(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|getVariableDeclarations()Ljava/util/Map;|getMethodDeclarations()Ljava/util/Map;|getClassDeclarations()Ljava/util/Map;|getEnclosingClassScope()Lnet/sourceforge/pmd/symboltable/ClassScope;|getClassName()Ljava/lang/String;|addDeclaration(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/ClassNameDeclaration;)V|findVariableHere(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|toString()Ljava/lang/String;|clipClassName(Ljava/lang/String;)Ljava/lang/String;|clinit()V}"]
ASTAttribute[shape="record", label="{ASTAttribute | {getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|isHasNamespacePrefix()Z|getNamespacePrefix()Ljava/lang/String;|getLocalName()Ljava/lang/String;|toString(Ljava/lang/String;)Ljava/lang/String;|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
GoListener[shape="record", label="{GoListener | {init(Lnet/sourceforge/pmd/cpd/GUI;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|access_000(Lnet/sourceforge/pmd/cpd/GUI$GoListener;)Lnet/sourceforge/pmd/cpd/GUI;|init(Lnet/sourceforge/pmd/cpd/GUI;Lnet/sourceforge/pmd/cpd/GUI$1;)V}"]
JspParser[shape="record", label="{JspParser | {quoteContent(Ljava/lang/String;)Ljava/lang/String;|expressionContent(Ljava/lang/String;)Ljava/lang/String;|CompilationUnit()Lnet/sourceforge/pmd/jsp/ast/ASTCompilationUnit;|Prolog()V|Content()V|ContentElementPossiblyWithText()V|JspDirective()V|JspDirectiveAttribute()V|JspScriptlet()V|JspExpression()V|JspDeclaration()V|JspComment()V|Text()V|UnparsedText()Ljava/lang/String;|UnparsedTextNoSingleQuotes()Ljava/lang/String;|UnparsedTextNoDoubleQuotes()Ljava/lang/String;|ElExpression()Ljava/lang/String;|ValueBindingInAttribute()Ljava/lang/String;|ElExpressionInAttribute()Ljava/lang/String;|CData()V|Element()V|Attribute()V|AttributeValue()V|QuoteIndependentAttributeValueContent()Ljava/lang/String;|JspExpressionInAttribute()Ljava/lang/String;|CommentTag()V|Declaration()V|DoctypeDeclaration()V|DoctypeExternalId()V|jj_2_1(I)Z|jj_2_2(I)Z|jj_3R_31()Z|jj_3R_46()Z|jj_3R_30()Z|jj_3R_29()Z|jj_3R_47()Z|jj_3R_27()Z|jj_3R_25()Z|jj_3R_28()Z|jj_3R_21()Z|jj_3R_40()Z|jj_3R_15()Z|jj_3R_24()Z|jj_3R_20()Z|jj_3R_42()Z|jj_3R_18()Z|jj_3R_13()Z|jj_3R_17()Z|jj_3R_26()Z|jj_3R_19()Z|jj_3R_14()Z|jj_3R_22()Z|jj_3_2()Z|jj_3R_12()Z|jj_3R_16()Z|jj_3R_48()Z|jj_3R_45()Z|jj_3_1()Z|jj_3R_44()Z|jj_3R_43()Z|jj_3R_39()Z|jj_3R_35()Z|jj_3R_38()Z|jj_3R_33()Z|jj_3R_41()Z|jj_3R_34()Z|jj_3R_37()Z|jj_3R_36()Z|jj_3R_23()Z|jj_3R_32()Z|jj_la1_0()V|jj_la1_1()V|jj_la1_2()V|init(Lnet/sourceforge/pmd/jsp/ast/CharStream;)V|ReInit(Lnet/sourceforge/pmd/jsp/ast/CharStream;)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParserTokenManager;)V|ReInit(Lnet/sourceforge/pmd/jsp/ast/JspParserTokenManager;)V|jj_consume_token(I)Lnet/sourceforge/pmd/jsp/ast/Token;|jj_scan_token(I)Z|getNextToken()Lnet/sourceforge/pmd/jsp/ast/Token;|getToken(I)Lnet/sourceforge/pmd/jsp/ast/Token;|jj_ntk()I|jj_add_error_token(II)V|generateParseException()Lnet/sourceforge/pmd/jsp/ast/ParseException;|enable_tracing()V|disable_tracing()V|jj_rescan_token()V|jj_save(II)V|clinit()V}"]
Executable[shape="record", label="{ABSTRACT_Executable | execute(Lnet/sourceforge/pmd/dfa/pathfinder/CurrentPath;)V}"]
LooseCoupling[shape="record", label="{LooseCoupling | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;}"]
UnusedModifier[shape="record", label="{UnusedModifier | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|check(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/Object;)V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ImplicitImportResolver[shape="record", label="{ImplicitImportResolver | {init()V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
ZipDataSource[shape="record", label="{ZipDataSource | {init(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V|getInputStream()Ljava/io/InputStream;|getNiceFileName(ZLjava/lang/String;)Ljava/lang/String;}"]
ConstructorCallsOverridableMethod[shape="record", label="{ConstructorCallsOverridableMethod | {init()V|getCurrentEvalPackage()Lnet/sourceforge/pmd/rules/ConstructorCallsOverridableMethod$EvalPackage;|putEvalPackage(Lnet/sourceforge/pmd/rules/ConstructorCallsOverridableMethod$EvalPackage;)V|removeCurrentEvalPackage()V|clearEvalPackages()V|visitClassDec(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|evaluateDangerOfMethods(Ljava/util/Map;)Z|evaluateDangerOfConstructors1(Ljava/util/Map;Ljava/util/Set;)V|evaluateDangerOfConstructors2(Ljava/util/Map;)Z|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|addCalledMethodsOfNode(Lnet/sourceforge/pmd/ast/AccessNode;Ljava/util/List;Ljava/lang/String;)V|addCalledMethodsOfNode(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/util/List;Ljava/lang/String;)V|addCalledMethodsOfNodeImpl(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V|findMethod(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/String;)Lnet/sourceforge/pmd/rules/ConstructorCallsOverridableMethod$MethodInvocation;|getNameFromPrefix(Lnet/sourceforge/pmd/ast/ASTPrimaryPrefix;)Ljava/lang/String;|access_000(Lnet/sourceforge/pmd/ast/ASTPrimaryPrefix;)Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
ClassNameDeclaration[shape="record", label="{ClassNameDeclaration | {init(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;)V|toString()Ljava/lang/String;}"]
ASTTypeParameters[shape="record", label="{ASTTypeParameters | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ArrayIsStoredDirectly[shape="record", label="{ArrayIsStoredDirectly | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|checkAll(Ljava/lang/Object;[Lnet/sourceforge/pmd/ast/ASTFormalParameter;Ljava/util/List;)V|checkForDirectAssignment(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/ASTFormalParameter;Ljava/util/List;)Z|getArrays(Lnet/sourceforge/pmd/ast/ASTFormalParameters;)[Lnet/sourceforge/pmd/ast/ASTFormalParameter;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
AbstractOptimizationRule[shape="record", label="{AbstractOptimizationRule | {init()V|isVarWritterInMethod(Ljava/lang/String;Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;)Z|getVarName(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;)Ljava/lang/String;|numericWithPrePost(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/String;)Z|variableAssigned(Ljava/lang/String;Ljava/util/List;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTText[shape="record", label="{ASTText | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
TextPadRenderer[shape="record", label="{TextPadRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
ASTJspComment[shape="record", label="{ASTJspComment | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
AssertionCall[shape="record", label="{AssertionCall | {init(ILjava/lang/String;)V}"]
SourceFileSelector[shape="record", label="{SourceFileSelector | {init()V|isWantedFile(Ljava/lang/String;)Z|isWantedFile(Ljava/io/File;)Z|isSelectJavaFiles()Z|setSelectJavaFiles(Z)V|isSelectJspFiles()Z|setSelectJspFiles(Z)V}"]
ASTConstructorDeclaration[shape="record", label="{ASTConstructorDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|getParameterCount()I|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|containsComment()Z|setContainsComment()V|dump(Ljava/lang/String;)V}"]
AnyFileOrDirectoryFilter[shape="record", label="{AnyFileOrDirectoryFilter | {init(Ljava/lang/String;)V|accept(Ljava/io/File;Ljava/lang/String;)Z}"]
CPPLanguage[shape="record", label="{CPPLanguage | {init()V|getTokenizer()Lnet/sourceforge/pmd/cpd/Tokenizer;|getFileFilter()Ljava/io/FilenameFilter;}"]
NoInlineStyleInformation[shape="record", label="{NoInlineStyleInformation | {init()V|visit(Lnet/sourceforge/pmd/jsp/ast/ASTAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTElement;Ljava/lang/Object;)Ljava/lang/Object;|isStyleElement(Lnet/sourceforge/pmd/jsp/ast/ASTElement;)Z|isStyleAttribute(Lnet/sourceforge/pmd/jsp/ast/ASTAttribute;)Z|clinit()V}"]
DFACanvas[shape="record", label="{DFACanvas | {init()V|paint(Ljava/awt/Graphics;)V|setCode(Lnet/sourceforge/pmd/util/HasLines;)V|setMethod(Lnet/sourceforge/pmd/ast/SimpleNode;)V|computeDrawPos(I)I|drawMyLine(IILjava/awt/Graphics;)V}"]
CPPParserTokenManager[shape="record", label="{CPPParserTokenManager | {setDebugStream(Ljava/io/PrintStream;)V|jjStopStringLiteralDfa_0(IJJJ)I|jjStartNfa_0(IJJJ)I|jjStopAtPos(II)I|jjStartNfaWithStates_0(III)I|jjMoveStringLiteralDfa0_0()I|jjMoveStringLiteralDfa1_0(JJJ)I|jjMoveStringLiteralDfa2_0(JJJJJJ)I|jjMoveStringLiteralDfa3_0(JJJJJJ)I|jjMoveStringLiteralDfa4_0(JJJJ)I|jjMoveStringLiteralDfa5_0(JJJJ)I|jjMoveStringLiteralDfa6_0(JJJJ)I|jjMoveStringLiteralDfa7_0(JJJJ)I|jjMoveStringLiteralDfa8_0(JJ)I|jjMoveStringLiteralDfa9_0(JJ)I|jjCheckNAdd(I)V|jjAddStates(II)V|jjCheckNAddTwoStates(II)V|jjCheckNAddStates(II)V|jjCheckNAddStates(I)V|jjMoveNfa_0(II)I|jjMoveStringLiteralDfa0_1()I|jjMoveStringLiteralDfa0_3()I|jjMoveStringLiteralDfa1_3(J)I|jjMoveStringLiteralDfa2_3(JJ)I|jjMoveStringLiteralDfa0_2()I|jjMoveStringLiteralDfa1_2(J)I|init(Lnet/sourceforge/pmd/cpd/cppast/SimpleCharStream;)V|init(Lnet/sourceforge/pmd/cpd/cppast/SimpleCharStream;I)V|ReInit(Lnet/sourceforge/pmd/cpd/cppast/SimpleCharStream;)V|ReInitRounds()V|ReInit(Lnet/sourceforge/pmd/cpd/cppast/SimpleCharStream;I)V|SwitchTo(I)V|jjFillToken()Lnet/sourceforge/pmd/cpd/cppast/Token;|getNextToken()Lnet/sourceforge/pmd/cpd/cppast/Token;|clinit()V}"]
ASTRelationalExpression[shape="record", label="{ASTRelationalExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
AccessorClassGeneration[shape="record", label="{AccessorClassGeneration | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;|processRule(Ljava/lang/Object;)V|getCurrentClassData()Lnet/sourceforge/pmd/rules/AccessorClassGeneration$ClassData;|setClassID(I)V|getClassID()I|stripString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|access_000(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;}"]
NLS[shape="record", label="{NLS | {init()V|nls(Ljava/lang/String;)Ljava/lang/String;|clinit()V}"]
SimpleNode_[shape="record", label="{SimpleNode | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtOpen()V|jjtClose()V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|childrenAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|toString()Ljava/lang/String;}"]
ImportOnDemandResolver[shape="record", label="{ImportOnDemandResolver | {init(Ljava/util/Set;)V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
DuplicateJspImports[shape="record", label="{DuplicateJspImports | {init()V|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDirectiveAttribute;Ljava/lang/Object;)Ljava/lang/Object;}"]
NameDeclaration[shape="record", label="{ABSTRACT_NameDeclaration | getNode()Lnet/sourceforge/pmd/ast/SimpleNode;|getImage()Ljava/lang/String;|getScope()Lnet/sourceforge/pmd/symboltable/Scope;}"]
ASTMemberValueArrayInitializer[shape="record", label="{ASTMemberValueArrayInitializer | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
DoubleCheckedLocking[shape="record", label="{DoubleCheckedLocking | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|ifVerify(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/String;)Z|matchName(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/String;)Z|getNameFromPrimaryPrefix(Lnet/sourceforge/pmd/ast/ASTPrimaryPrefix;)Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ShowListener[shape="record", label="{ShowListener | {init(Lnet/sourceforge/pmd/util/designer/Designer;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|init(Lnet/sourceforge/pmd/util/designer/Designer;Lnet/sourceforge/pmd/util/designer/Designer$1;)V}"]
SingularField[shape="record", label="{SingularField | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTSwitchLabel[shape="record", label="{ASTSwitchLabel | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setDefault()V|isDefault()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTLocalVariableDeclaration[shape="record", label="{ASTLocalVariableDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|hasSuppressWarningsAnnotationFor(Lnet/sourceforge/pmd/Rule;)Z|isArray()Z|getArrayDepth()I|checkType()I|checkDecl()I|dump(Ljava/lang/String;)V}"]
NullAssignmentRule[shape="record", label="{NullAssignmentRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;|isAssignmentToFinalField(Lnet/sourceforge/pmd/ast/ASTStatementExpression;)Z|checkTernary(Lnet/sourceforge/pmd/ast/ASTConditionalExpression;Ljava/lang/Object;Lnet/sourceforge/pmd/ast/ASTNullLiteral;)V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ExcessivePublicCount[shape="record", label="{ExcessivePublicCount | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|getTallyOnAccessType(Lnet/sourceforge/pmd/ast/AccessNode;)Ljava/lang/Integer;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTDoctypeDeclaration[shape="record", label="{ASTDoctypeDeclaration | {getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|toString(Ljava/lang/String;)Ljava/lang/String;|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SyntaxErrorException[shape="record", label="{SyntaxErrorException | {init(ILjava/lang/String;)V|getLine()I|getRuleName()Ljava/lang/String;}"]
Rule[shape="record", label="{ABSTRACT_Rule | getName()Ljava/lang/String;|getMessage()Ljava/lang/String;|getDescription()Ljava/lang/String;|getExample()Ljava/lang/String;|getExternalInfoUrl()Ljava/lang/String;|setName(Ljava/lang/String;)V|getRuleSetName()Ljava/lang/String;|setRuleSetName(Ljava/lang/String;)V|setMessage(Ljava/lang/String;)V|setDescription(Ljava/lang/String;)V|setExample(Ljava/lang/String;)V|setExternalInfoUrl(Ljava/lang/String;)V|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|hasProperty(Ljava/lang/String;)Z|addProperty(Ljava/lang/String;Ljava/lang/String;)V|addProperties(Ljava/util/Properties;)V|getIntProperty(Ljava/lang/String;)I|getBooleanProperty(Ljava/lang/String;)Z|getStringProperty(Ljava/lang/String;)Ljava/lang/String;|getDoubleProperty(Ljava/lang/String;)D|getProperties()Ljava/util/Properties;|include()Z|setInclude(Z)V|getPriority()I|getPriorityName()Ljava/lang/String;|setPriority(I)V|setUsesDFA()V|usesDFA()Z|clinit()V}"]
ASTLiteral[shape="record", label="{ASTLiteral | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|isStringLiteral()Z}"]
ASTCastExpression[shape="record", label="{ASTCastExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTEnumBody[shape="record", label="{ASTEnumBody | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SequenceException[shape="record", label="{SequenceException | {init()V|init(Ljava/lang/String;)V}"]
ASTFormalParameter[shape="record", label="{ASTFormalParameter | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|hasSuppressWarningsAnnotationFor(Lnet/sourceforge/pmd/Rule;)Z|isArray()Z|getArrayDepth()I|checkType()I|checkDecl()I|dump(Ljava/lang/String;)V}"]
ASTAnnotation[shape="record", label="{ASTAnnotation | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|suppresses(Lnet/sourceforge/pmd/Rule;)Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CPPFileOrDirectoryFilter[shape="record", label="{CPPFileOrDirectoryFilter | {init()V|accept(Ljava/io/File;Ljava/lang/String;)Z}"]
SummaryHTMLRenderer[shape="record", label="{SummaryHTMLRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|renderSummary(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
3[shape="record", label="{3 | {init(Lnet/sourceforge/pmd/cpd/GUI;J)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|munge(Ljava/lang/String;)Ljava/lang/String;}"]
ViewerModelEvent[shape="record", label="{ViewerModelEvent | {init(Ljava/lang/Object;I)V|init(Ljava/lang/Object;ILjava/lang/Object;)V|getReason()I|getSource()Ljava/lang/Object;|getParameter()Ljava/lang/Object;}"]
2[shape="record", label="{2 | {init(Lnet/sourceforge/pmd/cpd/GUI;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V}"]
DAAPathFinder[shape="record", label="{DAAPathFinder | {init(Lnet/sourceforge/pmd/dfa/IDataFlowNode;Lnet/sourceforge/pmd/dfa/pathfinder/Executable;)V|run()V|phase1()V|phase2(Z)V|phase3()Z|hasMoreChildren()Z|addSecondChild()V|addCurrentChild()V|addNodeToTree()V|removeFromTree()V|addNewPathElement(Ljavax/swing/tree/DefaultMutableTreeNode;)V|addNewPseudoPathElement(Ljavax/swing/tree/DefaultMutableTreeNode;Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|addRefPseudoPathElement(Ljavax/swing/tree/DefaultMutableTreeNode;Lnet/sourceforge/pmd/dfa/pathfinder/PathElement;)V|equalsPseudoPathElementWithDoBranchNodeInLevel(Ljavax/swing/tree/DefaultMutableTreeNode;)Z|getDoBranchNodeInLevel(Ljavax/swing/tree/DefaultMutableTreeNode;)Lnet/sourceforge/pmd/dfa/pathfinder/PathElement;|addNode(Ljavax/swing/tree/DefaultMutableTreeNode;Lnet/sourceforge/pmd/dfa/pathfinder/PathElement;)V|isNodeInLevel(Ljavax/swing/tree/DefaultMutableTreeNode;)Lnet/sourceforge/pmd/dfa/pathfinder/PathElement;|getLastChildNode(Ljavax/swing/tree/DefaultMutableTreeNode;)Ljavax/swing/tree/DefaultMutableTreeNode;|countLoops()I|incChild()V}"]
SymbolTableViewer[shape="record", label="{SymbolTableViewer | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|spaces()Ljava/lang/String;}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/cpd/GUI$GoListener;)V|run()V}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/util/viewer/gui/ASTPanel;)V|mouseReleased(Ljava/awt/event/MouseEvent;)V}"]
BrowseListener[shape="record", label="{BrowseListener | {init(Lnet/sourceforge/pmd/cpd/GUI;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|init(Lnet/sourceforge/pmd/cpd/GUI;Lnet/sourceforge/pmd/cpd/GUI$1;)V}"]
MainFrame[shape="record", label="{MainFrame | {init()V|init()V|createJDKVersion()Lnet/sourceforge/pmd/TargetJDKVersion;|actionPerformed(Ljava/awt/event/ActionEvent;)V|setStatus(Ljava/lang/String;)V|viewerModelChanged(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V}"]
ASTType[shape="record", label="{ASTType | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|getTypeImage()Ljava/lang/String;|getArrayDepth()I|isArray()Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ReadableDuration[shape="record", label="{ReadableDuration | {init(J)V|getTime()Ljava/lang/String;}"]
CompareObjectsWithEquals[shape="record", label="{CompareObjectsWithEquals | {init()V|hasName(Lnet/sourceforge/pmd/ast/Node;)Z|visit(Lnet/sourceforge/pmd/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
EvalPackage[shape="record", label="{EvalPackage | {init()V|init(Ljava/lang/String;)V}"]
ASTMethodDeclarator[shape="record", label="{ASTMethodDeclarator | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|getParameterCount()I|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTUnaryExpressionNotPlusMinus[shape="record", label="{ASTUnaryExpressionNotPlusMinus | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTVariableDeclarator[shape="record", label="{ASTVariableDeclarator | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTName[shape="record", label="{ASTName | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setNameDeclaration(Lnet/sourceforge/pmd/symboltable/NameDeclaration;)V|getNameDeclaration()Lnet/sourceforge/pmd/symboltable/NameDeclaration;|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UnusedPrivateFieldRule[shape="record", label="{UnusedPrivateFieldRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|actuallyUsed(Ljava/util/List;)Z|isOK(Ljava/lang/String;)Z}"]
Match[shape="record", label="{Match | {init(ILnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/TokenEntry;)V|getMarkCount()I|setLineCount(I)V|getLineCount()I|getTokenCount()I|getSourceCodeSlice()Ljava/lang/String;|setSourceCodeSlice(Ljava/lang/String;)V|iterator()Ljava/util/Iterator;|compareTo(Ljava/lang/Object;)I|getFirstMark()Lnet/sourceforge/pmd/cpd/TokenEntry;|getSecondMark()Lnet/sourceforge/pmd/cpd/TokenEntry;|toString()Ljava/lang/String;|getMarkSet()Ljava/util/Set;|getMatchCode()Lnet/sourceforge/pmd/cpd/Match$MatchCode;|getEndIndex()I|setMarkSet(Ljava/util/Set;)V}"]
Size[shape="record", label="{Size | {init(Ldacapo/parser/Config;Ljava/lang/String;Ljava/util/Vector;)V|addOutputFile(Ljava/lang/String;)V|getOutputFile(Ljava/lang/String;)Ldacapo/parser/Config$OutputFile;}"]
InefficientStringBuffering[shape="record", label="{InefficientStringBuffering | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;|isInStringBufferAppend(Lnet/sourceforge/pmd/ast/SimpleNode;I)Z|xParentIsStatementExpression(Lnet/sourceforge/pmd/ast/SimpleNode;I)Z|isAllocatedStringBuffer(Lnet/sourceforge/pmd/ast/ASTAdditiveExpression;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
JJTJspParserState[shape="record", label="{JJTJspParserState | {init()V|nodeCreated()Z|reset()V|rootNode()Lnet/sourceforge/pmd/jsp/ast/Node;|pushNode(Lnet/sourceforge/pmd/jsp/ast/Node;)V|popNode()Lnet/sourceforge/pmd/jsp/ast/Node;|peekNode()Lnet/sourceforge/pmd/jsp/ast/Node;|nodeArity()I|clearNodeScope(Lnet/sourceforge/pmd/jsp/ast/Node;)V|openNodeScope(Lnet/sourceforge/pmd/jsp/ast/Node;)V|closeNodeScope(Lnet/sourceforge/pmd/jsp/ast/Node;I)V|closeNodeScope(Lnet/sourceforge/pmd/jsp/ast/Node;Z)V}"]
JspTypeHandler[shape="record", label="{JspTypeHandler | {init()V|getParser()Lnet/sourceforge/pmd/parsers/Parser;|getDataFlowFacade()Lnet/sourceforge/pmd/sourcetypehandlers/VisitorStarter;|getSymbolFacade()Lnet/sourceforge/pmd/sourcetypehandlers/VisitorStarter;}"]
DocumentNavigator[shape="record", label="{DocumentNavigator | {init()V|getAttributeName(Ljava/lang/Object;)Ljava/lang/String;|getAttributeNamespaceUri(Ljava/lang/Object;)Ljava/lang/String;|getAttributeQName(Ljava/lang/Object;)Ljava/lang/String;|getAttributeStringValue(Ljava/lang/Object;)Ljava/lang/String;|getCommentStringValue(Ljava/lang/Object;)Ljava/lang/String;|getElementName(Ljava/lang/Object;)Ljava/lang/String;|getElementNamespaceUri(Ljava/lang/Object;)Ljava/lang/String;|getElementQName(Ljava/lang/Object;)Ljava/lang/String;|getElementStringValue(Ljava/lang/Object;)Ljava/lang/String;|getNamespacePrefix(Ljava/lang/Object;)Ljava/lang/String;|getNamespaceStringValue(Ljava/lang/Object;)Ljava/lang/String;|getTextStringValue(Ljava/lang/Object;)Ljava/lang/String;|isAttribute(Ljava/lang/Object;)Z|isComment(Ljava/lang/Object;)Z|isDocument(Ljava/lang/Object;)Z|isElement(Ljava/lang/Object;)Z|isNamespace(Ljava/lang/Object;)Z|isProcessingInstruction(Ljava/lang/Object;)Z|isText(Ljava/lang/Object;)Z|parseXPath(Ljava/lang/String;)Lorg/jaxen/XPath;|getParentNode(Ljava/lang/Object;)Ljava/lang/Object;|getAttributeAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getChildAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getParentAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getFollowingSiblingAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getPrecedingSiblingAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getFollowingAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getPrecedingAxisIterator(Ljava/lang/Object;)Ljava/util/Iterator;|getDocumentNode(Ljava/lang/Object;)Ljava/lang/Object;|clinit()V}"]
SuppressedViolation[shape="record", label="{SuppressedViolation | {init(Lnet/sourceforge/pmd/IRuleViolation;Z)V|suppressedByNOPMD()Z|suppressedByAnnotation()Z|getRuleViolation()Lnet/sourceforge/pmd/IRuleViolation;}"]
Result[shape="record", label="{Result | {compareTo(Ljava/lang/Object;)I|init(JLnet/sourceforge/pmd/Rule;)V}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/sourcetypehandlers/JspTypeHandler;)V|parse(Ljava/io/Reader;)Ljava/lang/Object;}"]
ParseException[shape="record", label="{ParseException | {init(Ldacapo/parser/Token;[[I[Ljava/lang/String;)V|init()V|init(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|add_escapes(Ljava/lang/String;)Ljava/lang/String;}"]
PHPLanguage[shape="record", label="{PHPLanguage | {init()V|getTokenizer()Lnet/sourceforge/pmd/cpd/Tokenizer;|getFileFilter()Ljava/io/FilenameFilter;}"]
ASTEnumConstant[shape="record", label="{ASTEnumConstant | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UseStringBufferLength[shape="record", label="{UseStringBufferLength | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;|isViolation(Lnet/sourceforge/pmd/ast/SimpleNode;Lnet/sourceforge/pmd/ast/SimpleNode;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
SimpleNodeTreeNodeAdapter_[shape="record", label="{SimpleNodeTreeNodeAdapter | {init(Lnet/sourceforge/pmd/util/viewer/model/SimpleNodeTreeNodeAdapter;Lnet/sourceforge/pmd/ast/SimpleNode;)V|getSimpleNode()Lnet/sourceforge/pmd/ast/SimpleNode;|getChildAt(I)Ljavax/swing/tree/TreeNode;|getChildCount()I|getParent()Ljavax/swing/tree/TreeNode;|getIndex(Ljavax/swing/tree/TreeNode;)I|getAllowsChildren()Z|isLeaf()Z|children()Ljava/util/Enumeration;|checkChildren()V|toString()Ljava/lang/String;}"]
IDEAJRenderer[shape="record", label="{IDEAJRenderer | {init([Ljava/lang/String;)V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|render(Lnet/sourceforge/pmd/Report;Ljava/lang/String;)Ljava/lang/String;|render(Lnet/sourceforge/pmd/Report;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|getFullyQualifiedClassName(Ljava/lang/String;Lnet/sourceforge/pmd/renderers/IDEAJRenderer$SourcePath;)Ljava/lang/String;|getSimpleFileName(Ljava/lang/String;)Ljava/lang/String;}"]
XMLRenderer[shape="record", label="{XMLRenderer | {init()V|render(Ljava/util/Iterator;)Ljava/lang/String;}"]
ASTCompilationUnit[shape="record", label="{ASTCompilationUnit | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
MethodNamingConventions[shape="record", label="{MethodNamingConventions | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;}"]
UselessAssignment[shape="record", label="{UselessAssignment | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|execute(Lnet/sourceforge/pmd/dfa/pathfinder/CurrentPath;)V}"]
ConsecutiveLiteralAppends[shape="record", label="{ConsecutiveLiteralAppends | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|checkConstructor(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)I|processAdditive(Ljava/lang/Object;ILnet/sourceforge/pmd/ast/SimpleNode;Lnet/sourceforge/pmd/ast/SimpleNode;)I|isAdditive(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|getFirstParentBlock(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getSwitchParent(Lnet/sourceforge/pmd/ast/Node;Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|checkForViolation(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/Object;I)V|isAppendingStringLiteral(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isStringBuffer(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
ASTExplicitConstructorInvocation[shape="record", label="{ASTExplicitConstructorInvocation | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|getArgumentCount()I|setIsThis()V|setIsSuper()V|isThis()Z|isSuper()Z}"]
JSmartPanel[shape="record", label="{JSmartPanel | {init()V|add(Ljava/awt/Component;IIIIDDIILjava/awt/Insets;)V}"]
CSVRenderer[shape="record", label="{CSVRenderer | {init()V|render(Ljava/util/Iterator;)Ljava/lang/String;}"]
SimpleRuleSetNameMapper[shape="record", label="{SimpleRuleSetNameMapper | {init(Ljava/lang/String;)V|getRuleSets()Ljava/lang/String;|check(Ljava/lang/String;)V|append(Ljava/lang/String;)V|populateNameMap()V}"]
LanguageFactory[shape="record", label="{LanguageFactory | {init()V|createLanguage(Ljava/lang/String;)Lnet/sourceforge/pmd/cpd/Language;|createLanguage(Ljava/lang/String;Ljava/util/Properties;)Lnet/sourceforge/pmd/cpd/Language;}"]
InsufficientStringBufferDeclaration[shape="record", label="{InsufficientStringBufferDeclaration | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|storeBlockStatistics(Ljava/util/Map;ILnet/sourceforge/pmd/ast/Node;)V|processBlocks(Ljava/util/Map;)I|processAdditive(Lnet/sourceforge/pmd/ast/SimpleNode;)I|processNode(Lnet/sourceforge/pmd/ast/SimpleNode;)I|getConstructorLength(Lnet/sourceforge/pmd/ast/SimpleNode;I)I|isAdditive(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|getFirstParentBlock(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getSwitchParent(Lnet/sourceforge/pmd/ast/Node;Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
ASTCatchStatement[shape="record", label="{ASTCatchStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SequenceChecker[shape="record", label="{SequenceChecker | {init(Ljava/util/List;)V|run()Z|getFirstIndex()I|getLastIndex()I|clinit()V}"]
AbstractScope[shape="record", label="{AbstractScope | {init()V|getClassDeclarations()Ljava/util/Map;|getEnclosingMethodScope()Lnet/sourceforge/pmd/symboltable/MethodScope;|getEnclosingClassScope()Lnet/sourceforge/pmd/symboltable/ClassScope;|getEnclosingSourceFileScope()Lnet/sourceforge/pmd/symboltable/SourceFileScope;|setParent(Lnet/sourceforge/pmd/symboltable/Scope;)V|getParent()Lnet/sourceforge/pmd/symboltable/Scope;|addDeclaration(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/ClassNameDeclaration;)V|contains(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Z|findVariableHere(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|glomNames(Ljava/util/Iterator;)Ljava/lang/String;}"]
SaveListener[shape="record", label="{SaveListener | {init(Lnet/sourceforge/pmd/cpd/GUI;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|error(Ljava/lang/String;Ljava/lang/Exception;)V|init(Lnet/sourceforge/pmd/cpd/GUI;Lnet/sourceforge/pmd/cpd/GUI$1;)V}"]
StartAndEndTagMismatchException[shape="record", label="{StartAndEndTagMismatchException | {init(IILjava/lang/String;IILjava/lang/String;)V|getEndColumn()I|getEndLine()I|getStartColumn()I|getStartLine()I|getMessage()Ljava/lang/String;}"]
JJTJavaParserState[shape="record", label="{JJTJavaParserState | {init()V|nodeCreated()Z|reset()V|rootNode()Lnet/sourceforge/pmd/ast/Node;|pushNode(Lnet/sourceforge/pmd/ast/Node;)V|popNode()Lnet/sourceforge/pmd/ast/Node;|peekNode()Lnet/sourceforge/pmd/ast/Node;|nodeArity()I|clearNodeScope(Lnet/sourceforge/pmd/ast/Node;)V|openNodeScope(Lnet/sourceforge/pmd/ast/Node;)V|closeNodeScope(Lnet/sourceforge/pmd/ast/Node;I)V|closeNodeScope(Lnet/sourceforge/pmd/ast/Node;Z)V}"]
MatchAlgorithm[shape="record", label="{MatchAlgorithm | {init(Ljava/util/Map;Lnet/sourceforge/pmd/cpd/Tokens;I)V|init(Ljava/util/Map;Lnet/sourceforge/pmd/cpd/Tokens;ILnet/sourceforge/pmd/cpd/CPDListener;)V|setListener(Lnet/sourceforge/pmd/cpd/CPDListener;)V|matches()Ljava/util/Iterator;|tokenAt(ILnet/sourceforge/pmd/cpd/TokenEntry;)Lnet/sourceforge/pmd/cpd/TokenEntry;|getMinimumTileSize()I|findMatches()V|hash()Ljava/util/Map;}"]
AvoidInstantiatingObjectsInLoops[shape="record", label="{AvoidInstantiatingObjectsInLoops | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;|fourthParentNotThrow(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;)Z|fourthParentNotReturn(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;)Z|insideLoop(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTDoStatement[shape="record", label="{ASTDoStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CharStream[shape="record", label="{ABSTRACT_CharStream | readChar()C|getColumn()I|getLine()I|getEndColumn()I|getEndLine()I|getBeginColumn()I|getBeginLine()I|backup(I)V|BeginToken()C|GetImage()Ljava/lang/String;|GetSuffix(I)[C|Done()V}"]
Structure[shape="record", label="{Structure | {init()V|createNewNode(Lnet/sourceforge/pmd/ast/SimpleNode;)Lnet/sourceforge/pmd/dfa/IDataFlowNode;|createStartNode(I)Lnet/sourceforge/pmd/dfa/IDataFlowNode;|createEndNode(I)Lnet/sourceforge/pmd/dfa/IDataFlowNode;|getLast()Lnet/sourceforge/pmd/dfa/IDataFlowNode;|getFirst()Lnet/sourceforge/pmd/dfa/IDataFlowNode;|pushOnStack(ILnet/sourceforge/pmd/dfa/IDataFlowNode;)V|getBraceStack()Ljava/util/List;|getContinueBreakReturnStack()Ljava/util/List;}"]
NodeIterator_[shape="record", label="{NodeIterator | {init(Lnet/sourceforge/pmd/ast/Node;)V|hasNext()Z|next()Ljava/lang/Object;|remove()V|getFirstNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getNextNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getPreviousSibling(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getPositionFromParent(Lnet/sourceforge/pmd/ast/Node;)I|getNextSibling(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getFirstChild(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|getLastChild(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;}"]
DacapoException[shape="record", label="{DacapoException | {init(Ljava/lang/String;)V|init(Ljava/lang/Exception;)V}"]
AvoidNonConstructorMethodsWithClassName[shape="record", label="{AvoidNonConstructorMethodsWithClassName | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;}"]
IRuleViolation[shape="record", label="{ABSTRACT_IRuleViolation | getFilename()Ljava/lang/String;|getBeginLine()I|getBeginColumn()I|getEndLine()I|getEndColumn()I|getRule()Lnet/sourceforge/pmd/Rule;|getDescription()Ljava/lang/String;|getPackageName()Ljava/lang/String;|getMethodName()Ljava/lang/String;|getClassName()Ljava/lang/String;|isSuppressed()Z|getVariableName()Ljava/lang/String;}"]
ASTElement[shape="record", label="{ASTElement | {isHasNamespacePrefix()Z|getNamespacePrefix()Ljava/lang/String;|getLocalName()Ljava/lang/String;|getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|isEmpty()Z|setEmpty(Z)V|toString(Ljava/lang/String;)Ljava/lang/String;|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
XMLRenderer[shape="record", label="{XMLRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|maybeAdd(Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuffer;)V|createVersionAttr()Ljava/lang/String;|createTimestampAttr()Ljava/lang/String;|createTimeElapsedAttr(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
DFAGraphRule[shape="record", label="{DFAGraphRule | {init()V|getMethods()Ljava/util/List;|getConstructors()Ljava/util/List;|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
XPathListener[shape="record", label="{XPathListener | {init(Lnet/sourceforge/pmd/util/designer/Designer;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V|init(Lnet/sourceforge/pmd/util/designer/Designer;Lnet/sourceforge/pmd/util/designer/Designer$1;)V}"]
CurrentPackageResolver[shape="record", label="{CurrentPackageResolver | {init(Ljava/lang/String;)V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTRSIGNEDSHIFT[shape="record", label="{ASTRSIGNEDSHIFT | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ViolationNode_[shape="record", label="{ViolationNode | {init(Lnet/sourceforge/pmd/IRuleViolation;)V|getRuleViolation()Lnet/sourceforge/pmd/IRuleViolation;|equalsNode(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)Z}"]
ASTJspDirectiveAttribute[shape="record", label="{ASTJspDirectiveAttribute | {getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|toString(Ljava/lang/String;)Ljava/lang/String;|getValue()Ljava/lang/String;|setValue(Ljava/lang/String;)V|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JspScopeAndDeclarationFinder[shape="record", label="{JspScopeAndDeclarationFinder | {init()V|setJspScope(Lnet/sourceforge/pmd/jsp/ast/ASTCompilationUnit;)V}"]
ImportFromSamePackageRule[shape="record", label="{ImportFromSamePackageRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;}"]
UseSingleton[shape="record", label="{UseSingleton | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
CPDNullListener[shape="record", label="{CPDNullListener | {init()V|addedFile(ILjava/io/File;)V|phaseUpdate(I)V}"]
EmacsRenderer[shape="record", label="{EmacsRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
ASTNormalAnnotation[shape="record", label="{ASTNormalAnnotation | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SimplifyBooleanReturns[shape="record", label="{SimplifyBooleanReturns | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;|hasOneBlockStmt(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|terminatesInBooleanLiteral(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|eachNodeHasOneChild(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|getLastChild(Lnet/sourceforge/pmd/ast/SimpleNode;)Lnet/sourceforge/pmd/ast/SimpleNode;}"]
ASTClassOrInterfaceDeclaration[shape="record", label="{ASTClassOrInterfaceDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|isNested()Z|isInterface()Z|setInterface()V|dump(Ljava/lang/String;)V}"]
ASTVariableDeclaratorId[shape="record", label="{ASTVariableDeclaratorId | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|getNameDeclaration()Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;|setNameDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|getUsages()Ljava/util/List;|bumpArrayDepth()V|getArrayDepth()I|isArray()Z|isExceptionBlockParameter()Z|getTypeNameNode()Lnet/sourceforge/pmd/ast/SimpleNode;|getTypeNode()Lnet/sourceforge/pmd/ast/ASTType;|findTypeNameNode(Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/SimpleNode;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Token[shape="record", label="{Token | {init()V|toString()Ljava/lang/String;|newToken(I)Lnet/sourceforge/pmd/cpd/cppast/Token;}"]
ProcessingError[shape="record", label="{ProcessingError | {init(Ljava/lang/String;Ljava/lang/String;)V|getMsg()Ljava/lang/String;|getFile()Ljava/lang/String;}"]
ConfusingTernary[shape="record", label="{ConfusingTernary | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;|isMatch(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isUnaryNot(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isNotEquals(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isConditionalWithAllMatches(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isParenthesisAroundMatch(Lnet/sourceforge/pmd/ast/SimpleNode;)Z}"]
ASTExclusiveOrExpression[shape="record", label="{ASTExclusiveOrExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JavaParserVisitor[shape="record", label="{ABSTRACT_JavaParserVisitor | visit(Lnet/sourceforge/pmd/ast/SimpleJavaNode;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExtendsList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImplementsList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumBody;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumConstant;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeParameters;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeBound;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceBodyDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFormalParameters;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExplicitConstructorInvocation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTReferenceType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeArguments;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeArgument;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTWildcardBounds;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTResultType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTNameList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAssignmentOperator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalOrExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalAndExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTInclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAndExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTInstanceOfExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTRelationalExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTShiftExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMultiplicativeExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPreIncrementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPreDecrementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTUnaryExpressionNotPlusMinus;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCastLookahead;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCastExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberSelector;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBooleanLiteral;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArguments;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArgumentList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArrayDimsAndInits;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLabeledStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBlock;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBlockStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEmptyStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForInit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatementExpressionList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForUpdate;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSynchronizedStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAssertStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTRUNSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTRSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTNormalAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMarkerAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSingleMemberAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValuePairs;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValuePair;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValue;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValueArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotationTypeBody;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotationTypeMemberDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTDefaultValue;Ljava/lang/Object;)Ljava/lang/Object;}"]
SimpleCharStream[shape="record", label="{SimpleCharStream | {setTabSize(I)V|getTabSize(I)I|ExpandBuff(Z)V|FillBuff()V|BeginToken()C|UpdateLineColumn(C)V|readChar()C|getColumn()I|getLine()I|getEndColumn()I|getEndLine()I|getBeginColumn()I|getBeginLine()I|backup(I)V|init(Ljava/io/Reader;III)V|init(Ljava/io/Reader;II)V|init(Ljava/io/Reader;)V|ReInit(Ljava/io/Reader;III)V|ReInit(Ljava/io/Reader;II)V|ReInit(Ljava/io/Reader;)V|init(Ljava/io/InputStream;Ljava/lang/String;III)V|init(Ljava/io/InputStream;III)V|init(Ljava/io/InputStream;Ljava/lang/String;II)V|init(Ljava/io/InputStream;II)V|init(Ljava/io/InputStream;Ljava/lang/String;)V|init(Ljava/io/InputStream;)V|ReInit(Ljava/io/InputStream;Ljava/lang/String;III)V|ReInit(Ljava/io/InputStream;III)V|ReInit(Ljava/io/InputStream;Ljava/lang/String;)V|ReInit(Ljava/io/InputStream;)V|ReInit(Ljava/io/InputStream;Ljava/lang/String;II)V|ReInit(Ljava/io/InputStream;II)V|GetImage()Ljava/lang/String;|GetSuffix(I)[C|Done()V|adjustBeginLineColumn(II)V}"]
ASTClassOrInterfaceType[shape="record", label="{ASTClassOrInterfaceType | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
FileDigest[shape="record", label="{FileDigest | {init()V|get(Ljava/lang/String;ZZLjava/io/File;)[B|replaceAllFixed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|getText(Ljava/io/File;ZLjava/io/File;)[B|getBinary(Ljava/io/File;)[B|main([Ljava/lang/String;)V}"]
AttributeToolkit[shape="record", label="{AttributeToolkit | {init()V|formatValueForXPath(Lnet/sourceforge/pmd/jaxen/Attribute;)Ljava/lang/String;|constructPredicate(Lnet/sourceforge/pmd/jaxen/Attribute;)Ljava/lang/String;}"]
AbstractRule[shape="record", label="{AbstractRule | {init()V|getRuleSetName()Ljava/lang/String;|setRuleSetName(Ljava/lang/String;)V|getDescription()Ljava/lang/String;|setDescription(Ljava/lang/String;)V|getExample()Ljava/lang/String;|setExample(Ljava/lang/String;)V|hasProperty(Ljava/lang/String;)Z|addProperty(Ljava/lang/String;Ljava/lang/String;)V|addProperties(Ljava/util/Properties;)V|getDoubleProperty(Ljava/lang/String;)D|getIntProperty(Ljava/lang/String;)I|getBooleanProperty(Ljava/lang/String;)Z|getStringProperty(Ljava/lang/String;)Ljava/lang/String;|getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|setMessage(Ljava/lang/String;)V|getExternalInfoUrl()Ljava/lang/String;|setExternalInfoUrl(Ljava/lang/String;)V|equals(Ljava/lang/Object;)Z|hashCode()I|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|getProperties()Ljava/util/Properties;|include()Z|setInclude(Z)V|getPriority()I|getPriorityName()Ljava/lang/String;|setPriority(I)V|setUsesDFA()V|usesDFA()Z|visitAll(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/SimpleNode;)V|addViolationWithMessage(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/Node;[Ljava/lang/Object;)V|getDeclaringType(Lnet/sourceforge/pmd/ast/SimpleNode;)Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
CommonAbstractRule[shape="record", label="{CommonAbstractRule | {init()V|getRuleSetName()Ljava/lang/String;|setRuleSetName(Ljava/lang/String;)V|getDescription()Ljava/lang/String;|setDescription(Ljava/lang/String;)V|getExample()Ljava/lang/String;|setExample(Ljava/lang/String;)V|hasProperty(Ljava/lang/String;)Z|addProperty(Ljava/lang/String;Ljava/lang/String;)V|addProperties(Ljava/util/Properties;)V|getDoubleProperty(Ljava/lang/String;)D|getIntProperty(Ljava/lang/String;)I|getBooleanProperty(Ljava/lang/String;)Z|getStringProperty(Ljava/lang/String;)Ljava/lang/String;|getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|setMessage(Ljava/lang/String;)V|getExternalInfoUrl()Ljava/lang/String;|setExternalInfoUrl(Ljava/lang/String;)V|equals(Ljava/lang/Object;)Z|hashCode()I|getProperties()Ljava/util/Properties;|include()Z|setInclude(Z)V|getPriority()I|getPriorityName()Ljava/lang/String;|setPriority(I)V|setUsesDFA()V|usesDFA()Z|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/SimpleNode;)V|addViolationWithMessage(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/Node;[Ljava/lang/Object;)V}"]
Java15Handler[shape="record", label="{Java15Handler | {init()V|getParser()Lnet/sourceforge/pmd/parsers/Parser;}"]
SourceFileConstants[shape="record", label="{SourceFileConstants | {init()V}"]
ASTPrimarySuffix[shape="record", label="{ASTPrimarySuffix | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setIsArrayDereference()V|isArrayDereference()Z|setIsArguments()V|isArguments()Z|getArgumentCount()I|dump(Ljava/lang/String;)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
AllocData[shape="record", label="{AllocData | {init(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/String;Ljava/util/List;)V|getName()Ljava/lang/String;|getArgumentCount()I|getASTAllocationExpression()Lnet/sourceforge/pmd/ast/ASTAllocationExpression;|isArray()Z}"]
TargetJDKVersion[shape="record", label="{ABSTRACT_TargetJDKVersion | createParser(Ljava/io/InputStream;)Lnet/sourceforge/pmd/ast/JavaParser;|createParser(Ljava/io/Reader;)Lnet/sourceforge/pmd/ast/JavaParser;|getVersionString()Ljava/lang/String;}"]
ASTWhileStatement[shape="record", label="{ASTWhileStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
FullyQualifiedNameResolver[shape="record", label="{FullyQualifiedNameResolver | {init()V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
DataPoint[shape="record", label="{DataPoint | {init()V|compareTo(Ljava/lang/Object;)I|getNode()Lnet/sourceforge/pmd/ast/SimpleNode;|setNode(Lnet/sourceforge/pmd/ast/SimpleNode;)V|getMessage()Ljava/lang/String;|setMessage(Ljava/lang/String;)V|getScore()D|setScore(D)V}"]
UnnecessaryCaseChange[shape="record", label="{UnnecessaryCaseChange | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;|getBadPrefixOrNull(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;)Ljava/lang/String;|getBadSuffixOrNull(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;)Ljava/lang/String;}"]
MMTkCallback[shape="record", label="{MMTkCallback | {init()V|start(Ljava/lang/String;)V|stop()V}"]
ASTPreDecrementExpression[shape="record", label="{ASTPreDecrementExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SourceCodePanel[shape="record", label="{SourceCodePanel | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;)V|init()V|getSourceCode()Ljava/lang/String;|viewerModelChanged(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V|access_000(Lnet/sourceforge/pmd/util/viewer/gui/SourceCodePanel;)Ljavax/swing/JTextArea;}"]
ASTRUNSIGNEDSHIFT[shape="record", label="{ASTRUNSIGNEDSHIFT | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
IdempotentOperations[shape="record", label="{IdempotentOperations | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;}"]
RuleSetFactory[shape="record", label="{RuleSetFactory | {init()V|setMinimumPriority(I)V|getRegisteredRuleSets()Ljava/util/Iterator;|createRuleSets(Ljava/lang/String;Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/RuleSets;|createRuleSets(Ljava/lang/String;)Lnet/sourceforge/pmd/RuleSets;|createRuleSet(Ljava/lang/String;Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/RuleSet;|createRuleSet(Ljava/lang/String;)Lnet/sourceforge/pmd/RuleSet;|createSingleRuleSet(Ljava/lang/String;Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/RuleSet;|createSingleRuleSet(Ljava/lang/String;)Lnet/sourceforge/pmd/RuleSet;|createRuleSet(Ljava/io/InputStream;)Lnet/sourceforge/pmd/RuleSet;|createRuleSet(Ljava/io/InputStream;Ljava/lang/ClassLoader;)Lnet/sourceforge/pmd/RuleSet;|tryToGetStreamTo(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/io/InputStream;|parseRuleNode(Lnet/sourceforge/pmd/RuleSet;Lorg/w3c/dom/Node;)V|parseInternallyDefinedRuleNode(Lnet/sourceforge/pmd/RuleSet;Lorg/w3c/dom/Node;)V|parseExternallyDefinedRuleNode(Lnet/sourceforge/pmd/RuleSet;Lorg/w3c/dom/Node;)V|parseRuleNodeWithSimpleReference(Lnet/sourceforge/pmd/RuleSet;Lorg/w3c/dom/Node;Ljava/lang/String;)V|parseRuleNodeWithExclude(Lnet/sourceforge/pmd/RuleSet;Lorg/w3c/dom/Element;Ljava/lang/String;)V|parseTextNode(Lorg/w3c/dom/Node;)Ljava/lang/String;|parsePropertiesNode(Ljava/util/Properties;Lorg/w3c/dom/Node;)V|parsePropertyNode(Ljava/util/Properties;Lorg/w3c/dom/Node;)V|access_000(Lorg/w3c/dom/Node;)Ljava/lang/String;|access_100(Ljava/util/Properties;Lorg/w3c/dom/Node;)V}"]
FileFinder[shape="record", label="{FileFinder | {init()V|findFilesFrom(Ljava/lang/String;Ljava/io/FilenameFilter;Z)Ljava/util/List;|scanDirectory(Ljava/io/File;Ljava/util/List;Z)V|clinit()V}"]
Digest[shape="record", label="{Digest | {init()V|create()Ljava/security/MessageDigest;|toString([B)Ljava/lang/String;}"]
ASTNullLiteral[shape="record", label="{ASTNullLiteral | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
TokenMgrError[shape="record", label="{TokenMgrError | {addEscapes(Ljava/lang/String;)Ljava/lang/String;|LexicalError(ZIIILjava/lang/String;C)Ljava/lang/String;|getMessage()Ljava/lang/String;|init()V|init(Ljava/lang/String;I)V|init(ZIIILjava/lang/String;CI)V}"]
MatchesFunction[shape="record", label="{MatchesFunction | {init()V|registerSelfInSimpleContext()V|call(Lorg/jaxen/Context;Ljava/util/List;)Ljava/lang/Object;}"]
TestClassWithoutTestCases[shape="record", label="{TestClassWithoutTestCases | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|isInInnerClassOrInterface(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Scope[shape="record", label="{ABSTRACT_Scope | getVariableDeclarations()Ljava/util/Map;|getClassDeclarations()Ljava/util/Map;|addDeclaration(Lnet/sourceforge/pmd/symboltable/ClassNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)V|contains(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Z|addVariableNameOccurrence(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|setParent(Lnet/sourceforge/pmd/symboltable/Scope;)V|getParent()Lnet/sourceforge/pmd/symboltable/Scope;|getEnclosingClassScope()Lnet/sourceforge/pmd/symboltable/ClassScope;|getEnclosingSourceFileScope()Lnet/sourceforge/pmd/symboltable/SourceFileScope;|getEnclosingMethodScope()Lnet/sourceforge/pmd/symboltable/MethodScope;}"]
SymbolFacade[shape="record", label="{SymbolFacade | {init()V|initializeWith(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;)V}"]
MyCallback[shape="record", label="{MyCallback | {init()V|start(Ljava/lang/String;)V|startWarmup(Ljava/lang/String;)V|stop()V|stopWarmup()V|complete(Ljava/lang/String;Z)V|completeWarmup(Ljava/lang/String;Z)V}"]
Report[shape="record", label="{Report | {init()V|exclude(Ljava/util/Set;)V|getCountSummary()Ljava/util/Map;|getViolationTree()Lnet/sourceforge/pmd/dfa/report/ReportTree;|getSummary()Ljava/util/Map;|addListener(Lnet/sourceforge/pmd/ReportListener;)V|getSuppressedRuleViolations()Ljava/util/List;|addRuleViolation(Lnet/sourceforge/pmd/IRuleViolation;)V|addMetric(Lnet/sourceforge/pmd/stat/Metric;)V|addError(Lnet/sourceforge/pmd/Report$ProcessingError;)V|hasMetrics()Z|metrics()Ljava/util/Iterator;|isEmpty()Z|treeIsEmpty()Z|treeIterator()Ljava/util/Iterator;|iterator()Ljava/util/Iterator;|errors()Ljava/util/Iterator;|treeSize()I|size()I|start()V|end()V|getElapsedTimeInMillis()J}"]
TextRenderer[shape="record", label="{TextRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|addSuppressed(Lnet/sourceforge/pmd/Report;Ljava/lang/StringBuffer;)V}"]
JUnitTestsShouldContainAsserts[shape="record", label="{JUnitTestsShouldContainAsserts | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|containsAssert(Lnet/sourceforge/pmd/ast/Node;Z)Z|isAssertOrFailStatement(Lnet/sourceforge/pmd/ast/ASTStatementExpression;)Z}"]
JspSymbolFacade[shape="record", label="{JspSymbolFacade | {init()V|start(Ljava/lang/Object;)V}"]
Callback[shape="record", label="{Callback | {init()V|start(Ljava/lang/String;)V|startWarmup(Ljava/lang/String;)V|start(Ljava/lang/String;Z)V|stop()V|stopWarmup()V|complete(Ljava/lang/String;Z)V|completeWarmup(Ljava/lang/String;Z)V|complete(Ljava/lang/String;ZZ)V}"]
ASTContinueStatement[shape="record", label="{ASTContinueStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
RuleSet[shape="record", label="{RuleSet | {init()V|size()I|addRule(Lnet/sourceforge/pmd/Rule;)V|getRules()Ljava/util/Collection;|usesDFA()Z|getRuleByName(Ljava/lang/String;)Lnet/sourceforge/pmd/Rule;|addRuleSet(Lnet/sourceforge/pmd/RuleSet;)V|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|getDescription()Ljava/lang/String;|setDescription(Ljava/lang/String;)V|equals(Ljava/lang/Object;)Z|hashCode()I|getLanguage()Lnet/sourceforge/pmd/Language;|setLanguage(Lnet/sourceforge/pmd/Language;)V}"]
ASTUnaryExpression[shape="record", label="{ASTUnaryExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ExceptionParser[shape="record", label="{ExceptionParser | {init(C)V|parse(Ljava/lang/String;)Ljava/util/Set;}"]
ASTInclusiveOrExpression[shape="record", label="{ASTInclusiveOrExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CouplingBetweenObjects[shape="record", label="{CouplingBetweenObjects | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTResultType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|handleASTTypeChildren(Lnet/sourceforge/pmd/ast/SimpleNode;)V|checkVariableType(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|filterTypes(Ljava/lang/String;)Z|filterPrimitivesAndWrappers(Ljava/lang/String;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTWildcardBounds[shape="record", label="{ASTWildcardBounds | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Slice[shape="record", label="{Slice | {init()V|extract(Ljava/io/File;Ljava/io/File;II)V|slice(Ljava/io/File;Ljava/io/File;I)V|main([Ljava/lang/String;)V}"]
ASTEmptyStatement[shape="record", label="{ASTEmptyStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Language[shape="record", label="{Language | {getByName(Ljava/lang/String;)Lnet/sourceforge/pmd/Language;|init(Ljava/lang/String;)V|getName()Ljava/lang/String;|equals(Ljava/lang/Object;)Z|hashCode()I|toString()Ljava/lang/String;|clinit()V}"]
TestHarness[shape="record", label="{TestHarness | {getURL(Ljava/lang/String;)Ljava/net/URL;|exists(Ljava/io/File;)Z|exists(Ljava/lang/String;)Z|coeff_of_var([J)D|main([Ljava/lang/String;)V|runBenchmark(Ljava/io/File;Ljava/lang/String;Ldacapo/TestHarness;)V|runBenchmarkOld(Ljava/lang/String;Ldacapo/TestHarness;)V|twoDecimalPlaces()Ljava/text/DecimalFormat;|printUsage()V|rmdir(Ljava/io/File;)V|TEST(I)I|bmInfo()V|dump()V|init(Ljava/io/InputStream;)V|findClass()Ljava/lang/Class;|findMethod()Ljava/lang/reflect/Method;|findMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;|vectorise([Ljava/lang/String;)Ljava/util/Vector;|invokeConfiguration(Ljava/lang/reflect/Method;Ljava/lang/String;)V|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
PHPFileOrDirectoryFilter[shape="record", label="{PHPFileOrDirectoryFilter | {init()V|accept(Ljava/io/File;Ljava/lang/String;)Z}"]
ASTJspDocument[shape="record", label="{ASTJspDocument | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ExcessiveLengthRule[shape="record", label="{ExcessiveLengthRule | {init(Ljava/lang/Class;)V|visit(Lnet/sourceforge/pmd/ast/SimpleJavaNode;Ljava/lang/Object;)Ljava/lang/Object;}"]
JavaCharStream[shape="record", label="{JavaCharStream | {hexval(C)I|ExpandBuff(Z)V|FillBuff()V|ReadByte()C|BeginToken()C|AdjustBuffSize()V|UpdateLineColumn(C)V|readChar()C|getColumn()I|getLine()I|getEndColumn()I|getEndLine()I|getBeginColumn()I|getBeginLine()I|backup(I)V|init(Ljava/io/Reader;III)V|init(Ljava/io/Reader;II)V|init(Ljava/io/Reader;)V|ReInit(Ljava/io/Reader;III)V|ReInit(Ljava/io/Reader;II)V|ReInit(Ljava/io/Reader;)V|init(Ljava/io/InputStream;III)V|init(Ljava/io/InputStream;II)V|init(Ljava/io/InputStream;)V|ReInit(Ljava/io/InputStream;III)V|ReInit(Ljava/io/InputStream;II)V|ReInit(Ljava/io/InputStream;)V|GetImage()Ljava/lang/String;|GetSuffix(I)[C|Done()V|adjustBeginLineColumn(II)V}"]
ASTCData[shape="record", label="{ASTCData | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
LanguageAttribute[shape="record", label="{LanguageAttribute | {init()V|getValues()[Ljava/lang/String;}"]
ASTEnumDeclaration[shape="record", label="{ASTEnumDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTCommentTag[shape="record", label="{ASTCommentTag | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ReportVisitor[shape="record", label="{ReportVisitor | {init()V|visit(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)V}"]
LongMethodRule[shape="record", label="{LongMethodRule | {init()V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTSynchronizedStatement[shape="record", label="{ASTSynchronizedStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JspParser[shape="record", label="{JspParser | {init()V|parse(Ljava/io/Reader;)Ljava/lang/Object;}"]
AnyTokenizer[shape="record", label="{AnyTokenizer | {init()V|tokenize(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V}"]
UnnecessaryConversionTemporary[shape="record", label="{UnnecessaryConversionTemporary | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;}"]
VariableNamingConventions[shape="record", label="{VariableNamingConventions | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|init()V|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|checkNames(Lnet/sourceforge/pmd/ast/AccessNode;Ljava/lang/Object;)Ljava/lang/Object;|normalizeMemberVariableName(Ljava/lang/String;)Ljava/lang/String;|normalizeStaticVariableName(Ljava/lang/String;)Ljava/lang/String;|stripSuffix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;|stripPrefix(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;|split(Ljava/lang/String;)[Ljava/lang/String;}"]
RuleSets[shape="record", label="{RuleSets | {init()V|init(Lnet/sourceforge/pmd/RuleSet;)V|addRuleSet(Lnet/sourceforge/pmd/RuleSet;)V|getAllRuleSets()[Lnet/sourceforge/pmd/RuleSet;|getAllRules()Ljava/util/Set;|applies(Lnet/sourceforge/pmd/Language;Lnet/sourceforge/pmd/Language;)Z|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/Language;)V|usesDFA(Lnet/sourceforge/pmd/Language;)Z|getRuleByName(Ljava/lang/String;)Lnet/sourceforge/pmd/Rule;}"]
ASTReturnStatement[shape="record", label="{ASTReturnStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
NullEvalPackage[shape="record", label="{NullEvalPackage | {init()V}"]
GridBagHelper[shape="record", label="{GridBagHelper | {init(Ljava/awt/Container;[D)V|add(Ljava/awt/Component;)V|add(Ljava/awt/Component;I)V|nextRow()V|addLabel(Ljava/lang/String;)V}"]
Main[shape="record", label="{Main | {init()V|main([Ljava/lang/String;)V}"]
RuleSetWrapper[shape="record", label="{RuleSetWrapper | {init()V|getFile()Ljava/lang/String;|addText(Ljava/lang/String;)V}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/util/viewer/gui/SourceCodePanel;Lnet/sourceforge/pmd/ast/SimpleNode;)V|run()V}"]
ASTAnnotationTypeBody[shape="record", label="{ASTAnnotationTypeBody | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTElExpression[shape="record", label="{ASTElExpression | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTAssignmentOperator[shape="record", label="{ASTAssignmentOperator | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setCompound()V|isCompound()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|dump(Ljava/lang/String;)V}"]
Parser[shape="record", label="{ABSTRACT_Parser | parse(Ljava/io/Reader;)Ljava/lang/Object;}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/sourcetypehandlers/JavaTypeHandler;)V|start(Ljava/lang/Object;)V}"]
ExcludeLines[shape="record", label="{ExcludeLines | {init(Ljava/io/Reader;Ljava/lang/String;)V|init(Ljava/io/Reader;)V|getCopyReader()Ljava/io/Reader;|getLinesToExclude()Ljava/util/Set;}"]
2[shape="record", label="{2 | {init(Lnet/sourceforge/pmd/sourcetypehandlers/JavaTypeHandler;)V|start(Ljava/lang/Object;)V}"]
DummyScope[shape="record", label="{DummyScope | {init()V|getVariableDeclarations()Ljava/util/Map;|getClassDeclarations()Ljava/util/Map;|addDeclaration(Lnet/sourceforge/pmd/symboltable/ClassNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)V|contains(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Z|addVariableNameOccurrence(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|setParent(Lnet/sourceforge/pmd/symboltable/Scope;)V|getParent()Lnet/sourceforge/pmd/symboltable/Scope;|getEnclosingClassScope()Lnet/sourceforge/pmd/symboltable/ClassScope;|getEnclosingSourceFileScope()Lnet/sourceforge/pmd/symboltable/SourceFileScope;|getEnclosingMethodScope()Lnet/sourceforge/pmd/symboltable/MethodScope;}"]
JJCalls[shape="record", label="{JJCalls | {init()V}"]
ASTStatementExpressionList[shape="record", label="{ASTStatementExpressionList | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTForUpdate[shape="record", label="{ASTForUpdate | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ParseException[shape="record", label="{ParseException | {init(Lnet/sourceforge/pmd/cpd/cppast/Token;[[I[Ljava/lang/String;)V|init()V|init(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|add_escapes(Ljava/lang/String;)Ljava/lang/String;}"]
OverrideParser[shape="record", label="{OverrideParser | {init(Lorg/w3c/dom/Element;)V|overrideAsNecessary(Lnet/sourceforge/pmd/Rule;)V}"]
ASTThrowStatement[shape="record", label="{ASTThrowStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|getFirstClassOrInterfaceTypeImage()Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Formatter[shape="record", label="{Formatter | {init()V|setShowSuppressed(Z)V|setType(Ljava/lang/String;)V|setLinkPrefix(Ljava/lang/String;)V|setToFile(Ljava/io/File;)V|setToConsole(Z)V|outputReport(Lnet/sourceforge/pmd/Report;Ljava/lang/String;)V|outputReportTo(Ljava/io/Writer;Lnet/sourceforge/pmd/Report;Z)V|isNoOutputSupplied()Z|toString()Ljava/lang/String;|getRenderer(Z)Lnet/sourceforge/pmd/renderers/Renderer;|getToFileWriter(Ljava/lang/String;)Ljava/io/Writer;}"]
ViewerModelListener[shape="record", label="{ABSTRACT_ViewerModelListener | viewerModelChanged(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V}"]
FileCodeLoader[shape="record", label="{FileCodeLoader | {init(Ljava/io/File;)V|getReader()Ljava/io/Reader;|getFileName()Ljava/lang/String;}"]
Tokens[shape="record", label="{Tokens | {init()V|add(Lnet/sourceforge/pmd/cpd/TokenEntry;)V|iterator()Ljava/util/Iterator;|get(I)Lnet/sourceforge/pmd/cpd/TokenEntry;|size()I|getLineCount(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/Match;)I|getTokens()Ljava/util/List;}"]
Fix[shape="record", label="{ABSTRACT_Fix | fix(Ljava/lang/String;I)Ljava/lang/String;|getLabel()Ljava/lang/String;}"]
ASTArrayInitializer[shape="record", label="{ASTArrayInitializer | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CPPParserConstants[shape="record", label="{ABSTRACT_CPPParserConstants | clinit()V}"]
TargetJDK1_5[shape="record", label="{TargetJDK15 | {init()V|createParser(Ljava/io/InputStream;)Lnet/sourceforge/pmd/ast/JavaParser;|createParser(Ljava/io/Reader;)Lnet/sourceforge/pmd/ast/JavaParser;|getVersionString()Ljava/lang/String;}"]
RuleSetNotFoundException[shape="record", label="{RuleSetNotFoundException | {init(Ljava/lang/String;)V}"]
AbstractReportNode_[shape="record", label="{AbstractReportNode | {init()V|equalsNode(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)Z|getFirstChild()Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;|getNextSibling()Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;|getChildIndex(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)I|addFirst(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)V|add(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)V|addNumberOfViolation(I)V|getNumberOfViolations()I|childrenAccept(Lnet/sourceforge/pmd/dfa/report/ReportVisitor;)V|accept(Lnet/sourceforge/pmd/dfa/report/ReportVisitor;)V|getChildAt(I)Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;|getChildCount()I|getParent()Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;|isLeaf()Z}"]
TargetJDK1_3[shape="record", label="{TargetJDK13 | {init()V|createParser(Ljava/io/InputStream;)Lnet/sourceforge/pmd/ast/JavaParser;|createParser(Ljava/io/Reader;)Lnet/sourceforge/pmd/ast/JavaParser;|getVersionString()Ljava/lang/String;}"]
MethodWrapper[shape="record", label="{MethodWrapper | {init(Ljava/lang/reflect/Method;)V|truncateMethodName(Ljava/lang/String;)Ljava/lang/String;}"]
SuspiciousOctalEscape[shape="record", label="{SuspiciousOctalEscape | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;|isOctal(C)Z|isDecimal(C)Z}"]
TargetJDK1_4[shape="record", label="{TargetJDK14 | {init()V|createParser(Ljava/io/InputStream;)Lnet/sourceforge/pmd/ast/JavaParser;|createParser(Ljava/io/Reader;)Lnet/sourceforge/pmd/ast/JavaParser;|createJavaParserTokenManager(Ljava/io/Reader;)Lnet/sourceforge/pmd/ast/JavaParserTokenManager;|getVersionString()Ljava/lang/String;}"]
ASTMultiplicativeExpression[shape="record", label="{ASTMultiplicativeExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UseIndexOfChar[shape="record", label="{UseIndexOfChar | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTPrimaryPrefix[shape="record", label="{ASTPrimaryPrefix | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setUsesThisModifier()V|usesThisModifier()Z|setUsesSuperModifier()V|usesSuperModifier()Z|dump(Ljava/lang/String;)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
MatchCollector[shape="record", label="{MatchCollector | {init(Lnet/sourceforge/pmd/cpd/MatchAlgorithm;)V|collect(Ljava/util/List;)V|getMatches()Ljava/util/List;|determineMatch(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/TokenEntry;I)V|hasPreviousDupe(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/TokenEntry;)Z|countDuplicateTokens(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/TokenEntry;)I|matchEnded(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/TokenEntry;)Z}"]
AvoidFieldNameMatchingMethodName[shape="record", label="{AvoidFieldNameMatchingMethodName | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
AbstractRenderer[shape="record", label="{AbstractRenderer | {init()V|showSuppressedViolations(Z)V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
AvoidDeeplyNestedIfStmtsRule[shape="record", label="{AvoidDeeplyNestedIfStmtsRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTAssertStatement[shape="record", label="{ASTAssertStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ImportWrapper[shape="record", label="{ImportWrapper | {init(Ljava/lang/String;Ljava/lang/String;Lnet/sourceforge/pmd/ast/SimpleNode;)V|equals(Ljava/lang/Object;)Z|hashCode()I|getName()Ljava/lang/String;|getFullName()Ljava/lang/String;|getNode()Lnet/sourceforge/pmd/ast/SimpleNode;}"]
Language[shape="record", label="{ABSTRACT_Language | getTokenizer()Lnet/sourceforge/pmd/cpd/Tokenizer;|getFileFilter()Ljava/io/FilenameFilter;}"]
ExcessiveNodeCountRule_[shape="record", label="{ExcessiveNodeCountRule | {init(Ljava/lang/Class;)V|visit(Lnet/sourceforge/pmd/ast/SimpleJavaNode;Ljava/lang/Object;)Ljava/lang/Object;}"]
AvoidCallingFinalize[shape="record", label="{AvoidCallingFinalize | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;}"]
MethodHolder[shape="record", label="{MethodHolder | {init(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;)V|setCalledMethod(Ljava/lang/String;)V|getCalled()Ljava/lang/String;|getASTMethodDeclarator()Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;|isDangerous()Z|setDangerous()V}"]
OutputFile[shape="record", label="{OutputFile | {init(Ldacapo/parser/Config;Ljava/lang/String;)V|hasDigest()Z|hasLines()Z|hasBytes()Z}"]
ASTClassOrInterfaceBodyDeclaration[shape="record", label="{ASTClassOrInterfaceBodyDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|hasSuppressWarningsAnnotationFor(Lnet/sourceforge/pmd/Rule;)Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|isAnonymousInnerClass()Z|isEnumChild()Z|dump(Ljava/lang/String;)V}"]
HasLines[shape="record", label="{ABSTRACT_HasLines | getLine(I)Ljava/lang/String;}"]
ASTResultType[shape="record", label="{ASTResultType | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|returnsArray()Z|isVoid()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CSVRenderer[shape="record", label="{CSVRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|quote(Ljava/lang/String;)Ljava/lang/String;|quoteAndCommify(Ljava/lang/String;)Ljava/lang/String;}"]
LookaheadSuccess[shape="record", label="{LookaheadSuccess | {init()V|init(Lnet/sourceforge/pmd/ast/JavaParser$1;)V}"]
Benchmark[shape="record", label="{Benchmark | {run(Ldacapo/Callback;Ljava/lang/String;Z)Z|init(Ldacapo/parser/Config;Ljava/io/File;)V|prepare()V|preIteration(Ljava/lang/String;)V|startIteration()V|iterate(Ljava/lang/String;)V|stopIteration()V|validate(Ljava/lang/String;)Z|postIteration(Ljava/lang/String;)V|postIterationCleanup(Ljava/lang/String;)V|cleanup()V|copyFileTo(Ljava/io/File;Ljava/io/File;)V|copyFile(Ljava/io/File;Ljava/io/File;)V|getURL(Ljava/lang/String;)Ljava/net/URL;|fileInScratch(Ljava/lang/String;)Ljava/lang/String;|unpackZipFile(Ljava/lang/String;Ljava/io/File;)V|unpackZipFileResource(Ljava/lang/String;Ljava/io/File;)V|unpackZipStream(Ljava/io/BufferedInputStream;Ljava/io/File;)V|deleteTree(Ljava/io/File;)V|deleteFile(Ljava/io/File;)V|deleteFiles(Ljava/io/File;Ljava/lang/String;)V|lineCount(Ljava/lang/String;)I|lineCount(Ljava/io/File;)I|sortArray([Ljava/lang/Comparable;)V|byteCount(Ljava/lang/String;)J|byteCount(Ljava/io/File;)J|setVerbose(Z)V|isVerbose()Z|enableValidationReport(Ljava/lang/String;)V|setValidateOutput(Z)V|isDigestOutput()Z|setPreserve(Z)V|isPreserve()Z|getIteration()I|setValidate(Z)V|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
AvoidReassigningParameters[shape="record", label="{AvoidReassigningParameters | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;}"]
Token[shape="record", label="{Token | {init()V|toString()Ljava/lang/String;|newToken(I)Ldacapo/parser/Token;}"]
ASTConditionalAndExpression[shape="record", label="{ASTConditionalAndExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTModel[shape="record", label="{ASTModel | {init(Lnet/sourceforge/pmd/ast/SimpleNode;)V|getChild(Ljava/lang/Object;I)Ljava/lang/Object;|getChildCount(Ljava/lang/Object;)I|getIndexOfChild(Ljava/lang/Object;Ljava/lang/Object;)I|isLeaf(Ljava/lang/Object;)Z|getRoot()Ljava/lang/Object;|valueForPathChanged(Ljavax/swing/tree/TreePath;Ljava/lang/Object;)V|addTreeModelListener(Ljavax/swing/event/TreeModelListener;)V|removeTreeModelListener(Ljavax/swing/event/TreeModelListener;)V|fireTreeModelEvent(Ljavax/swing/event/TreeModelEvent;)V}"]
JavaParserTokenManager[shape="record", label="{JavaParserTokenManager | {setDebugStream(Ljava/io/PrintStream;)V|jjStopStringLiteralDfa_0(IJJ)I|jjStartNfa_0(IJJ)I|jjStopAtPos(II)I|jjStartNfaWithStates_0(III)I|jjMoveStringLiteralDfa0_0()I|jjMoveStringLiteralDfa1_0(JJ)I|jjMoveStringLiteralDfa2_0(JJJJ)I|jjMoveStringLiteralDfa3_0(JJJJ)I|jjMoveStringLiteralDfa4_0(JJJJ)I|jjMoveStringLiteralDfa5_0(JJ)I|jjMoveStringLiteralDfa6_0(JJ)I|jjMoveStringLiteralDfa7_0(JJ)I|jjMoveStringLiteralDfa8_0(JJ)I|jjMoveStringLiteralDfa9_0(JJ)I|jjMoveStringLiteralDfa10_0(JJ)I|jjMoveStringLiteralDfa11_0(JJ)I|jjCheckNAdd(I)V|jjAddStates(II)V|jjCheckNAddTwoStates(II)V|jjCheckNAddStates(II)V|jjCheckNAddStates(I)V|jjMoveNfa_0(II)I|jjMoveStringLiteralDfa0_2()I|jjMoveStringLiteralDfa1_2(J)I|jjMoveStringLiteralDfa0_1()I|jjMoveStringLiteralDfa1_1(J)I|jjCanMove_0(IIIJJ)Z|jjCanMove_1(IIIJJ)Z|jjCanMove_2(IIIJJ)Z|init(Lnet/sourceforge/pmd/ast/CharStream;)V|init(Lnet/sourceforge/pmd/ast/CharStream;I)V|ReInit(Lnet/sourceforge/pmd/ast/CharStream;)V|ReInitRounds()V|ReInit(Lnet/sourceforge/pmd/ast/CharStream;I)V|SwitchTo(I)V|jjFillToken()Lnet/sourceforge/pmd/ast/Token;|getNextToken()Lnet/sourceforge/pmd/ast/Token;|SkipLexicalActions(Lnet/sourceforge/pmd/ast/Token;)V|MoreLexicalActions()V|TokenLexicalActions(Lnet/sourceforge/pmd/ast/Token;)V|clinit()V}"]
AbstractJspRule[shape="record", label="{AbstractJspRule | {init()V|getRuleSetName()Ljava/lang/String;|setRuleSetName(Ljava/lang/String;)V|getDescription()Ljava/lang/String;|setDescription(Ljava/lang/String;)V|getExample()Ljava/lang/String;|setExample(Ljava/lang/String;)V|hasProperty(Ljava/lang/String;)Z|addProperty(Ljava/lang/String;Ljava/lang/String;)V|addProperties(Ljava/util/Properties;)V|getDoubleProperty(Ljava/lang/String;)D|getIntProperty(Ljava/lang/String;)I|getBooleanProperty(Ljava/lang/String;)Z|getStringProperty(Ljava/lang/String;)Ljava/lang/String;|getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|setMessage(Ljava/lang/String;)V|getExternalInfoUrl()Ljava/lang/String;|setExternalInfoUrl(Ljava/lang/String;)V|equals(Ljava/lang/Object;)Z|hashCode()I|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|getProperties()Ljava/util/Properties;|include()Z|setInclude(Z)V|getPriority()I|getPriorityName()Ljava/lang/String;|setPriority(I)V|setUsesDFA()V|usesDFA()Z|visitAll(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/jsp/ast/SimpleNode;)V|addViolationWithMessage(Ljava/lang/Object;Lnet/sourceforge/pmd/jsp/ast/SimpleNode;Ljava/lang/String;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/jsp/ast/SimpleNode;Ljava/lang/String;)V|addViolation(Ljava/lang/Object;Lnet/sourceforge/pmd/ast/Node;[Ljava/lang/Object;)V}"]
AvoidCatchingThrowable[shape="record", label="{AvoidCatchingThrowable | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
SimpleCharStream[shape="record", label="{SimpleCharStream | {ExpandBuff(Z)V|FillBuff()V|BeginToken()C|UpdateLineColumn(C)V|readChar()C|getColumn()I|getLine()I|getEndColumn()I|getEndLine()I|getBeginColumn()I|getBeginLine()I|backup(I)V|init(Ljava/io/Reader;III)V|init(Ljava/io/Reader;II)V|init(Ljava/io/Reader;)V|ReInit(Ljava/io/Reader;III)V|ReInit(Ljava/io/Reader;II)V|ReInit(Ljava/io/Reader;)V|init(Ljava/io/InputStream;III)V|init(Ljava/io/InputStream;II)V|init(Ljava/io/InputStream;)V|ReInit(Ljava/io/InputStream;III)V|ReInit(Ljava/io/InputStream;)V|ReInit(Ljava/io/InputStream;II)V|GetImage()Ljava/lang/String;|GetSuffix(I)[C|Done()V|adjustBeginLineColumn(II)V}"]
ReportException[shape="record", label="{ReportException | {init(Ljava/lang/Throwable;)V}"]
UnusedFormalParameterRule[shape="record", label="{UnusedFormalParameterRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|check(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/Object;)V}"]
CancelListener[shape="record", label="{CancelListener | {init()V|actionPerformed(Ljava/awt/event/ActionEvent;)V|init(Lnet/sourceforge/pmd/cpd/GUI$1;)V}"]
ASTAllocationExpression[shape="record", label="{ASTAllocationExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Renderer[shape="record", label="{ABSTRACT_Renderer | render(Ljava/util/Iterator;)Ljava/lang/String;}"]
RuleContext[shape="record", label="{RuleContext | {init()V|getReport()Lnet/sourceforge/pmd/Report;|setReport(Lnet/sourceforge/pmd/Report;)V|getSourceCodeFilename()Ljava/lang/String;|setSourceCodeFilename(Ljava/lang/String;)V|excludeLines(Ljava/util/Set;)V}"]
ClassNode_[shape="record", label="{ClassNode | {init(Ljava/lang/String;)V|getClassName()Ljava/lang/String;|equalsNode(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)Z}"]
ASTEnumElement[shape="record", label="{ASTEnumElement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTMemberValuePair[shape="record", label="{ASTMemberValuePair | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|dump(Ljava/lang/String;)V}"]
Status[shape="record", label="{Status | {init(I)V|init(IZ)V|addStep(Lnet/sourceforge/pmd/dfa/SequenceChecker$Status;)V|step(I)Lnet/sourceforge/pmd/dfa/SequenceChecker$Status;|isLastStep()Z|hasMoreSteps()Z}"]
ASTJspScriptlet[shape="record", label="{ASTJspScriptlet | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
SimpleNodeSubMenu_[shape="record", label="{SimpleNodeSubMenu | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;Lnet/sourceforge/pmd/ast/SimpleNode;)V|init()V}"]
TeePrintStream[shape="record", label="{TeePrintStream | {init(Ljava/io/OutputStream;Ljava/io/File;)V|version()V|openLog()V|closeLog()V}"]
CPD[shape="record", label="{CPD | {init(ILnet/sourceforge/pmd/cpd/Language;)V|skipDuplicates()V|setCpdListener(Lnet/sourceforge/pmd/cpd/CPDListener;)V|go()V|getMatches()Ljava/util/Iterator;|add(Ljava/io/File;)V|addAllInDirectory(Ljava/lang/String;)V|addRecursively(Ljava/lang/String;)V|add(Ljava/util/List;)V|addDirectory(Ljava/lang/String;Z)V|add(ILjava/io/File;)V|getRendererFromString(Ljava/lang/String;)Lnet/sourceforge/pmd/cpd/Renderer;|findBooleanSwitch([Ljava/lang/String;Ljava/lang/String;)Z|findRequiredStringValue([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|findOptionalStringValue([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|main([Ljava/lang/String;)V|usage()V}"]
ASTCompilationUnit[shape="record", label="{ASTCompilationUnit | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
StringConcatenationRule[shape="record", label="{StringConcatenationRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;}"]
DataFlowNode_[shape="record", label="{DataFlowNode | {init()V|init(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/util/LinkedList;)V|addPathToChild(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|removePathToChild(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)Z|reverseParentPathsTo(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|getLine()I|setType(I)V|isType(I)Z|getSimpleNode()Lnet/sourceforge/pmd/ast/SimpleNode;|getChildren()Ljava/util/List;|getParents()Ljava/util/List;|getFlow()Ljava/util/List;|getIndex()I|setVariableAccess(Ljava/util/List;)V|getVariableAccess()Ljava/util/List;|toString()Ljava/lang/String;|stringFromType(I)Ljava/lang/String;}"]
JspParserConstants[shape="record", label="{ABSTRACT_JspParserConstants | clinit()V}"]
XPathRule[shape="record", label="{XPathRule | {init()V|evaluate(Lnet/sourceforge/pmd/ast/Node;Lnet/sourceforge/pmd/RuleContext;)V|initializeXPathExpression()V|throwJaxenAsRuntime(Lorg/jaxen/JaxenException;)V|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V}"]
SimpleNode_[shape="record", label="{SimpleNode | {getDataFlowNode()Lnet/sourceforge/pmd/dfa/IDataFlowNode;|discardIfNecessary()V|setDataFlowNode(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|setDiscardable()V|setUnDiscardable()V|init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setScope(Lnet/sourceforge/pmd/symboltable/Scope;)V|getScope()Lnet/sourceforge/pmd/symboltable/Scope;|getBeginLine()I|testingOnly__setBeginLine(I)V|testingOnly__setBeginColumn(I)V|getBeginColumn()I|getImage()Ljava/lang/String;|setImage(Ljava/lang/String;)V|getEndLine()I|getEndColumn()I|getNthParent(I)Lnet/sourceforge/pmd/ast/Node;|getFirstParentOfType(Ljava/lang/Class;)Lnet/sourceforge/pmd/ast/Node;|getParentsOfType(Ljava/lang/Class;)Ljava/util/List;|findChildrenOfType(Ljava/lang/Class;)Ljava/util/List;|findChildrenOfType(Ljava/lang/Class;Ljava/util/List;)V|findChildrenOfType(Ljava/lang/Class;Ljava/util/List;Z)V|findChildrenOfType(Lnet/sourceforge/pmd/ast/Node;Ljava/lang/Class;Ljava/util/List;Z)V|jjtSetParent(Lnet/sourceforge/pmd/ast/Node;)V|jjtGetParent()Lnet/sourceforge/pmd/ast/Node;|jjtReplaceChild(Lnet/sourceforge/pmd/ast/Node;Lnet/sourceforge/pmd/ast/Node;)V|jjtAddChild(Lnet/sourceforge/pmd/ast/Node;I)V|jjtGetChild(I)Lnet/sourceforge/pmd/ast/Node;|jjtGetNumChildren()I|toString(Ljava/lang/String;)Ljava/lang/String;|asXml()Lorg/w3c/dom/Document;|appendElement(Lorg/w3c/dom/Node;)V|dump(Ljava/lang/String;)V|dumpChildren(Ljava/lang/String;)V|getFirstChildOfType(Ljava/lang/Class;)Lnet/sourceforge/pmd/ast/Node;|getFirstChildOfType(Ljava/lang/Class;Lnet/sourceforge/pmd/ast/Node;)Lnet/sourceforge/pmd/ast/Node;|containsChildOfType(Ljava/lang/Class;)Z|findChildNodesWithXPath(Ljava/lang/String;)Ljava/util/List;}"]
TokenMgrError[shape="record", label="{TokenMgrError | {addEscapes(Ljava/lang/String;)Ljava/lang/String;|LexicalError(ZIIILjava/lang/String;C)Ljava/lang/String;|getMessage()Ljava/lang/String;|init()V|init(Ljava/lang/String;I)V|init(ZIIILjava/lang/String;CI)V}"]
JspParserVisitor[shape="record", label="{ABSTRACT_JspParserVisitor | visit(Lnet/sourceforge/pmd/jsp/ast/SimpleNode;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTContent;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDirective;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDirectiveAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspScriptlet;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspComment;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTText;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTUnparsedText;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTElExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTValueBinding;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTCData;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTElement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTAttributeValue;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTJspExpressionInAttribute;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTCommentTag;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTDoctypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/jsp/ast/ASTDoctypeExternalId;Ljava/lang/Object;)Ljava/lang/Object;}"]
ConstructorHolder[shape="record", label="{ConstructorHolder | {init(Lnet/sourceforge/pmd/rules/ConstructorCallsOverridableMethod;Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;)V|getASTConstructorDeclaration()Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;|getCalledConstructor()Lnet/sourceforge/pmd/rules/ConstructorCallsOverridableMethod$ConstructorInvocation;|getASTExplicitConstructorInvocation()Lnet/sourceforge/pmd/ast/ASTExplicitConstructorInvocation;|initCI()V|isDangerous()Z|setDangerous(Z)V}"]
AccessNode_[shape="record", label="{AccessNode | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setModifiers(I)V|isPublic()Z|isProtected()Z|isPrivate()Z|isStatic()Z|isAbstract()Z|isFinal()Z|isNative()Z|isStrictfp()Z|isSynchronized()Z|isTransient()Z|isVolatile()Z|setPublic()V|setPrivate()V|setProtected()V|setSynchronized()V|setVolatile()V|setAbstract()V|setStatic()V|setTransient()V|setFinal()V|setNative()V|setStrictfp()V|removeModifier(II)I|isPackagePrivate()Z|collectDumpedModifiers(Ljava/lang/String;)Ljava/lang/String;}"]
CanSuppressWarnings[shape="record", label="{ABSTRACT_CanSuppressWarnings | hasSuppressWarningsAnnotationFor(Lnet/sourceforge/pmd/Rule;)Z}"]
StringCodeLoader[shape="record", label="{StringCodeLoader | {init(Ljava/lang/String;)V|init(Ljava/lang/String;Ljava/lang/String;)V|getReader()Ljava/io/Reader;|getFileName()Ljava/lang/String;}"]
CloseResource[shape="record", label="{CloseResource | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|ensureClosed(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)V|importsJavaSqlPackage(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Java14Parser[shape="record", label="{Java14Parser | {init()V|parse(Ljava/io/Reader;)Ljava/lang/Object;}"]
ASTBreakStatement[shape="record", label="{ASTBreakStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
GUI[shape="record", label="{GUI | {init()V|makeSettingsPanel(Ljavax/swing/JButton;Ljavax/swing/JButton;Ljavax/swing/JButton;)Ljavax/swing/JPanel;|makeProgressPanel()Ljavax/swing/JPanel;|makeResultsPanel()Ljavax/swing/JPanel;|go()V|phaseUpdate(I)V|getPhaseText(I)Ljava/lang/String;|addedFile(ILjava/io/File;)V|main([Ljava/lang/String;)V|access_100(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JProgressBar;|access_200(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JTextArea;|access_300(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JLabel;|access_400(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JTextField;|access_500(Lnet/sourceforge/pmd/cpd/GUI;)V|access_600(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JFrame;|access_700(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JFileChooser;|access_800(Lnet/sourceforge/pmd/cpd/GUI;)Ljava/util/List;|access_900(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JTextField;|access_1400(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JComboBox;|access_1500(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JCheckBox;|access_1600(Lnet/sourceforge/pmd/cpd/GUI;)Ljavax/swing/JTextField;}"]
AbstractSunSecureRule[shape="record", label="{AbstractSunSecureRule | {init()V|isField(Ljava/lang/String;Lnet/sourceforge/pmd/ast/ASTTypeDeclaration;)Z|getReturnedVariableName(Lnet/sourceforge/pmd/ast/ASTReturnStatement;)Ljava/lang/String;|isLocalVariable(Ljava/lang/String;Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;)Z|getFirstNameImage(Lnet/sourceforge/pmd/ast/SimpleNode;)Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ASTShiftExpression[shape="record", label="{ASTShiftExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTStatementExpression[shape="record", label="{ASTStatementExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
DuplicateImportsRule[shape="record", label="{DuplicateImportsRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTPrimaryExpression[shape="record", label="{ASTPrimaryExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
MethodArgumentCouldBeFinal[shape="record", label="{MethodArgumentCouldBeFinal | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|assigned(Ljava/util/List;)Z}"]
PMDException[shape="record", label="{PMDException | {init(Ljava/lang/String;)V|init(Ljava/lang/String;Ljava/lang/Exception;)V|printStackTrace()V|printStackTrace(Ljava/io/PrintStream;)V|printStackTrace(Ljava/io/PrintWriter;)V|getReason()Ljava/lang/Exception;|setSeverity(I)V|getSeverity()I}"]
ASTCastLookahead[shape="record", label="{ASTCastLookahead | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTIfStatement[shape="record", label="{ASTIfStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|setHasElse()V|hasElse()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|dump(Ljava/lang/String;)V}"]
CyclomaticComplexity[shape="record", label="{CyclomaticComplexity | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;}"]
JspParserTokenManager[shape="record", label="{JspParserTokenManager | {setDebugStream(Ljava/io/PrintStream;)V|jjStopStringLiteralDfa_9(IJ)I|jjStartNfa_9(IJ)I|jjStopAtPos(II)I|jjStartNfaWithStates_9(III)I|jjMoveStringLiteralDfa0_9()I|jjMoveStringLiteralDfa1_9(J)I|jjCheckNAdd(I)V|jjAddStates(II)V|jjCheckNAddTwoStates(II)V|jjCheckNAddStates(II)V|jjCheckNAddStates(I)V|jjMoveNfa_9(II)I|jjMoveStringLiteralDfa0_4()I|jjMoveStringLiteralDfa1_4(J)I|jjMoveStringLiteralDfa2_4(JJ)I|jjMoveStringLiteralDfa0_6()I|jjMoveNfa_6(II)I|jjMoveStringLiteralDfa0_3()I|jjMoveNfa_3(II)I|jjMoveStringLiteralDfa0_0()I|jjMoveNfa_0(II)I|jjStopStringLiteralDfa_2(IJJ)I|jjStartNfa_2(IJJ)I|jjStartNfaWithStates_2(III)I|jjMoveStringLiteralDfa0_2()I|jjMoveNfa_2(II)I|jjStopStringLiteralDfa_7(IJ)I|jjStartNfa_7(IJ)I|jjStartNfaWithStates_7(III)I|jjMoveStringLiteralDfa0_7()I|jjMoveStringLiteralDfa1_7(J)I|jjMoveStringLiteralDfa2_7(JJ)I|jjMoveStringLiteralDfa3_7(JJ)I|jjMoveNfa_7(II)I|jjStopStringLiteralDfa_13(IJJ)I|jjStartNfa_13(IJJ)I|jjStartNfaWithStates_13(III)I|jjMoveStringLiteralDfa0_13()I|jjMoveNfa_13(II)I|jjStopStringLiteralDfa_16(IJ)I|jjStartNfa_16(IJ)I|jjStartNfaWithStates_16(III)I|jjMoveStringLiteralDfa0_16()I|jjMoveStringLiteralDfa1_16(J)I|jjMoveStringLiteralDfa2_16(JJ)I|jjMoveStringLiteralDfa3_16(JJ)I|jjMoveStringLiteralDfa4_16(JJ)I|jjMoveStringLiteralDfa5_16(JJ)I|jjMoveStringLiteralDfa6_16(JJ)I|jjMoveStringLiteralDfa7_16(JJ)I|jjMoveStringLiteralDfa8_16(JJ)I|jjMoveNfa_16(II)I|jjStopStringLiteralDfa_12(IJ)I|jjStartNfa_12(IJ)I|jjStartNfaWithStates_12(III)I|jjMoveStringLiteralDfa0_12()I|jjMoveStringLiteralDfa1_12(J)I|jjMoveStringLiteralDfa2_12(JJ)I|jjMoveStringLiteralDfa3_12(JJ)I|jjMoveStringLiteralDfa4_12(JJ)I|jjMoveStringLiteralDfa5_12(JJ)I|jjMoveStringLiteralDfa6_12(JJ)I|jjMoveStringLiteralDfa7_12(JJ)I|jjMoveStringLiteralDfa8_12(JJ)I|jjMoveNfa_12(II)I|jjStopStringLiteralDfa_8(IJ)I|jjStartNfa_8(IJ)I|jjStartNfaWithStates_8(III)I|jjMoveStringLiteralDfa0_8()I|jjMoveStringLiteralDfa1_8(J)I|jjMoveNfa_8(II)I|jjStopStringLiteralDfa_11(IJ)I|jjStartNfa_11(IJ)I|jjStartNfaWithStates_11(III)I|jjMoveStringLiteralDfa0_11()I|jjMoveStringLiteralDfa1_11(J)I|jjMoveNfa_11(II)I|jjMoveStringLiteralDfa0_15()I|jjMoveNfa_15(II)I|jjStopStringLiteralDfa_1(IJJ)I|jjStartNfa_1(IJJ)I|jjStartNfaWithStates_1(III)I|jjMoveStringLiteralDfa0_1()I|jjMoveNfa_1(II)I|jjStopStringLiteralDfa_5(IJ)I|jjStartNfa_5(IJ)I|jjStartNfaWithStates_5(III)I|jjMoveStringLiteralDfa0_5()I|jjMoveStringLiteralDfa1_5(J)I|jjMoveStringLiteralDfa2_5(JJ)I|jjMoveStringLiteralDfa3_5(JJ)I|jjMoveStringLiteralDfa4_5(JJ)I|jjMoveStringLiteralDfa5_5(JJ)I|jjMoveNfa_5(II)I|jjStopStringLiteralDfa_10(IJ)I|jjStartNfa_10(IJ)I|jjStartNfaWithStates_10(III)I|jjMoveStringLiteralDfa0_10()I|jjMoveStringLiteralDfa1_10(J)I|jjMoveNfa_10(II)I|jjStopStringLiteralDfa_14(IJ)I|jjStartNfa_14(IJ)I|jjStartNfaWithStates_14(III)I|jjMoveStringLiteralDfa0_14()I|jjMoveStringLiteralDfa1_14(J)I|jjMoveNfa_14(II)I|init(Lnet/sourceforge/pmd/jsp/ast/CharStream;)V|init(Lnet/sourceforge/pmd/jsp/ast/CharStream;I)V|ReInit(Lnet/sourceforge/pmd/jsp/ast/CharStream;)V|ReInitRounds()V|ReInit(Lnet/sourceforge/pmd/jsp/ast/CharStream;I)V|SwitchTo(I)V|jjFillToken()Lnet/sourceforge/pmd/jsp/ast/Token;|getNextToken()Lnet/sourceforge/pmd/jsp/ast/Token;|clinit()V}"]
CPDListener[shape="record", label="{ABSTRACT_CPDListener | addedFile(ILjava/io/File;)V|phaseUpdate(I)V}"]
DFAPanel[shape="record", label="{DFAPanel | {init()V|valueChanged(Ljavax/swing/event/ListSelectionEvent;)V|resetTo(Ljava/util/List;Lnet/sourceforge/pmd/util/HasLines;)V}"]
ElementWrapper[shape="record", label="{ElementWrapper | {init(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;)V|getNode()Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;|toString()Ljava/lang/String;}"]
SwitchDensity[shape="record", label="{SwitchDensity | {init()V|addSwitchLabel()V|addStatement()V|addStatements(I)V|getStatementCount()I|getDensity()D|init(Lnet/sourceforge/pmd/rules/design/SwitchDensityRule$1;)V}"]
SourcePath[shape="record", label="{SourcePath | {init(Ljava/lang/String;)V|clipPath(Ljava/lang/String;)Ljava/lang/String;}"]
ASTTypeParameter[shape="record", label="{ASTTypeParameter | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
RubyFileOrDirectoryFilter[shape="record", label="{RubyFileOrDirectoryFilter | {init()V|accept(Ljava/io/File;Ljava/lang/String;)Z}"]
ASTArgumentList[shape="record", label="{ASTArgumentList | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTFinallyStatement[shape="record", label="{ASTFinallyStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Config[shape="record", label="{Config | {init(Ljava/lang/String;)V|setClass(Ljava/lang/String;)V|setMethod(Ljava/lang/String;)V|addSize(Ljava/lang/String;Ljava/util/Vector;)V|getSize(Ljava/lang/String;)Ldacapo/parser/Config$Size;|addDesc(Ljava/lang/String;Ljava/lang/String;)V|addOutputFile(Ljava/lang/String;Ljava/lang/String;)V|setDigest(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|setLines(Ljava/lang/String;Ljava/lang/String;I)V|setBytes(Ljava/lang/String;Ljava/lang/String;J)V|setKeep(Ljava/lang/String;Ljava/lang/String;)V|setExists(Ljava/lang/String;Ljava/lang/String;)V|setTextFile(Ljava/lang/String;Ljava/lang/String;Z)V|setFilterScratch(Ljava/lang/String;Ljava/lang/String;Z)V|parse(Ljava/lang/String;)Ldacapo/parser/Config;|parse(Ljava/io/File;)Ldacapo/parser/Config;|parse(Ljava/net/URL;)Ldacapo/parser/Config;|parse(Ljava/io/InputStream;)Ldacapo/parser/Config;|getArgs(Ljava/lang/String;)[Ljava/lang/String;|getSizes()Ljava/util/Collection;|getOutputs(Ljava/lang/String;)Ljava/util/Set;|getDigest(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|hasDigest(Ljava/lang/String;Ljava/lang/String;)Z|isTextFile(Ljava/lang/String;Ljava/lang/String;)Z|filterScratch(Ljava/lang/String;Ljava/lang/String;)Z|getBytes(Ljava/lang/String;Ljava/lang/String;)J|hasBytes(Ljava/lang/String;Ljava/lang/String;)Z|getLines(Ljava/lang/String;Ljava/lang/String;)I|hasLines(Ljava/lang/String;Ljava/lang/String;)Z|isKept(Ljava/lang/String;Ljava/lang/String;)Z|checkExists(Ljava/lang/String;Ljava/lang/String;)Z|pad(Ljava/lang/String;I)Ljava/lang/String;|describe(Ljava/io/PrintStream;)V|describe(Ljava/io/PrintStream;ZLjava/lang/String;Ljava/lang/String;)V|describe(Ljava/io/PrintStream;Z)V|getDesc(Ljava/lang/String;)Ljava/lang/String;|print(Ljava/io/PrintStream;)V|main([Ljava/lang/String;)V}"]
StartOrEndDataFlowNode_[shape="record", label="{StartOrEndDataFlowNode | {init(Ljava/util/LinkedList;IZ)V|toString()Ljava/lang/String;}"]
ASTPostfixExpression[shape="record", label="{ASTPostfixExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
FormatAttribute[shape="record", label="{FormatAttribute | {init()V|getValues()[Ljava/lang/String;|clinit()V}"]
MyPrintStream[shape="record", label="{MyPrintStream | {init()V|println(Ljava/lang/String;)V|getString()Ljava/lang/String;}"]
DataFlowFacade[shape="record", label="{DataFlowFacade | {init()V|initializeWith(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;)V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;}"]
HTMLRenderer[shape="record", label="{HTMLRenderer | {init(Ljava/lang/String;)V|init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|renderBody(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|glomIRuleViolations(Lnet/sourceforge/pmd/Report;)Ljava/lang/StringBuffer;|glomProcessingErrors(Lnet/sourceforge/pmd/Report;Ljava/lang/StringBuffer;)V|glomSuppressions(Lnet/sourceforge/pmd/Report;Ljava/lang/StringBuffer;)V|maybeWrap(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;}"]
PackageNode_[shape="record", label="{PackageNode | {init(Ljava/lang/String;)V|getPackageName()Ljava/lang/String;|equalsNode(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)Z}"]
MatchLengthComparator[shape="record", label="{MatchLengthComparator | {init()V|compare(Ljava/lang/Object;Ljava/lang/Object;)I}"]
RuleViolation[shape="record", label="{RuleViolation | {init(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/ast/SimpleNode;)V|init(Lnet/sourceforge/pmd/Rule;Lnet/sourceforge/pmd/RuleContext;Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|getRule()Lnet/sourceforge/pmd/Rule;|isSuppressed()Z|getBeginColumn()I|getEndColumn()I|getDescription()Ljava/lang/String;|getFilename()Ljava/lang/String;|getClassName()Ljava/lang/String;|getMethodName()Ljava/lang/String;|getPackageName()Ljava/lang/String;|getBeginLine()I|getEndLine()I|getVariableName()Ljava/lang/String;|toString()Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
CommandLineOptions[shape="record", label="{CommandLineOptions | {init([Ljava/lang/String;)V|createRenderer()Lnet/sourceforge/pmd/renderers/Renderer;|containsCommaSeparatedFileList()Z|getInputPath()Ljava/lang/String;|getEncoding()Ljava/lang/String;|getReportFormat()Ljava/lang/String;|getRulesets()Ljava/lang/String;|getExcludeMarker()Ljava/lang/String;|debugEnabled()Z|getTargetJDK()Ljava/lang/String;|shortNamesEnabled()Z|usage()Ljava/lang/String;|isCheckJavaFiles()Z|isCheckJspFiles()Z}"]
VBHTMLRenderer[shape="record", label="{VBHTMLRenderer | {init()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|header()Ljava/lang/String;|footer()Ljava/lang/String;}"]
LatexDescriptions[shape="record", label="{LatexDescriptions | {init()V|main([Ljava/lang/String;)V|print([Ljava/lang/String;Ljava/lang/String;)V|print([Ljava/lang/String;Ljava/io/PrintStream;)V|strop(Ljava/lang/String;)Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;|clinit()V}"]
CurrentPath[shape="record", label="{CurrentPath | {init()V|iterator()Ljava/util/Iterator;|getLast()Lnet/sourceforge/pmd/dfa/IDataFlowNode;|removeLast()V|isEmpty()Z|addLast(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|isDoBranchNode()Z|isFirstDoStatement()Z|getDoBranchNodeFromFirstDoStatement()Lnet/sourceforge/pmd/dfa/IDataFlowNode;|isEndNode()Z|isBranch()Z|isFirstDoStatement(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)Z}"]
ConfigFileConstants[shape="record", label="{ABSTRACT_ConfigFileConstants | clinit()V}"]
UnnecessaryLocalBeforeReturn[shape="record", label="{UnnecessaryLocalBeforeReturn | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
OccurrenceFinder[shape="record", label="{OccurrenceFinder | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;}"]
ConstructorInvocation[shape="record", label="{ConstructorInvocation | {init(Lnet/sourceforge/pmd/ast/ASTExplicitConstructorInvocation;)V|getASTExplicitConstructorInvocation()Lnet/sourceforge/pmd/ast/ASTExplicitConstructorInvocation;|getArgumentCount()I|getName()Ljava/lang/String;}"]
Java15Parser[shape="record", label="{Java15Parser | {init()V|parse(Ljava/io/Reader;)Ljava/lang/Object;}"]
ASTJspDeclarations[shape="record", label="{ASTJspDeclarations | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
IDataFlowNode_[shape="record", label="{ABSTRACT_IDataFlowNode | getVariableAccess()Ljava/util/List;|getLine()I|getIndex()I|isType(I)Z|getChildren()Ljava/util/List;|getParents()Ljava/util/List;|getFlow()Ljava/util/List;|getSimpleNode()Lnet/sourceforge/pmd/ast/SimpleNode;|setVariableAccess(Ljava/util/List;)V|addPathToChild(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|removePathToChild(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)Z|reverseParentPathsTo(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V}"]
AvoidFieldNameMatchingTypeName[shape="record", label="{AvoidFieldNameMatchingTypeName | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
CodeEditorTextPane[shape="record", label="{CodeEditorTextPane | {init()V|getLine(I)Ljava/lang/String;|actionPerformed(Ljava/awt/event/ActionEvent;)V|loadCode()Ljava/lang/String;|clinit()V}"]
Viewer[shape="record", label="{Viewer | {init()V|main([Ljava/lang/String;)V}"]
TokenMgrError[shape="record", label="{TokenMgrError | {addEscapes(Ljava/lang/String;)Ljava/lang/String;|LexicalError(ZIIILjava/lang/String;C)Ljava/lang/String;|getMessage()Ljava/lang/String;|init()V|init(Ljava/lang/String;I)V|init(ZIIILjava/lang/String;CI)V}"]
ASTArrayDimsAndInits[shape="record", label="{ASTArrayDimsAndInits | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTMethodDeclarationLookahead[shape="record", label="{ASTMethodDeclarationLookahead | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
VoidResolver[shape="record", label="{VoidResolver | {init()V|resolve(Ljava/lang/String;)Ljava/lang/Class;}"]
PapariTextRenderer[shape="record", label="{PapariTextRenderer | {init()V|initializeColorsIfSupported()V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;|getLine(Ljava/lang/String;I)Ljava/lang/String;|getRelativePath(Ljava/lang/String;)Ljava/lang/String;}"]
Benchmark[shape="record", label="{Benchmark | {init()V|findBooleanSwitch([Ljava/lang/String;Ljava/lang/String;)Z|findOptionalStringValue([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|main([Ljava/lang/String;)V|parseStress(Lnet/sourceforge/pmd/TargetJDKVersion;Ljava/util/List;)V|stress(Lnet/sourceforge/pmd/TargetJDKVersion;Lnet/sourceforge/pmd/RuleSet;Ljava/util/List;Ljava/util/Set;Z)V}"]
ViewerModel[shape="record", label="{ViewerModel | {init()V|getRootNode()Lnet/sourceforge/pmd/ast/SimpleNode;|commitSource(Ljava/lang/String;Lnet/sourceforge/pmd/TargetJDKVersion;)V|hasCompiledTree()Z|evaluateXPathExpression(Ljava/lang/String;Ljava/lang/Object;)V|getLastEvaluationResults()Ljava/util/List;|selectNode(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/Object;)V|appendToXPathExpression(Ljava/lang/String;Ljava/lang/Object;)V|addViewerModelListener(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelListener;)V|removeViewerModelListener(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelListener;)V|fireViewerModelEvent(Lnet/sourceforge/pmd/util/viewer/model/ViewerModelEvent;)V}"]
JavaNode_[shape="record", label="{ABSTRACT_JavaNode | jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTExpression[shape="record", label="{ASTExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTReferenceType[shape="record", label="{ASTReferenceType | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|bumpArrayDepth()V|getArrayDepth()I|isArray()Z}"]
Node_[shape="record", label="{ABSTRACT_Node | jjtOpen()V|jjtClose()V|jjtSetParent(Lnet/sourceforge/pmd/ast/Node;)V|jjtGetParent()Lnet/sourceforge/pmd/ast/Node;|jjtAddChild(Lnet/sourceforge/pmd/ast/Node;I)V|jjtGetChild(I)Lnet/sourceforge/pmd/ast/Node;|jjtGetNumChildren()I}"]
ASTContent[shape="record", label="{ASTContent | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Renderer[shape="record", label="{ABSTRACT_Renderer | showSuppressedViolations(Z)V|render(Lnet/sourceforge/pmd/Report;)Ljava/lang/String;}"]
ASTJspDeclaration[shape="record", label="{ASTJspDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTTryStatement[shape="record", label="{ASTTryStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|hasFinally()Z|getFinally()Lnet/sourceforge/pmd/ast/ASTFinallyStatement;}"]
ASTPrimitiveType[shape="record", label="{ASTPrimitiveType | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|isBoolean()Z|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|bumpArrayDepth()V|getArrayDepth()I|isArray()Z}"]
StackObject[shape="record", label="{StackObject | {init(ILnet/sourceforge/pmd/dfa/IDataFlowNode;)V|getDataFlowNode()Lnet/sourceforge/pmd/dfa/IDataFlowNode;|getType()I}"]
SourceTypeToRuleLanguageMapper[shape="record", label="{SourceTypeToRuleLanguageMapper | {init()V|getMappedLanguage(Lnet/sourceforge/pmd/SourceType;)Lnet/sourceforge/pmd/Language;|clinit()V}"]
ASTEqualityExpression[shape="record", label="{ASTEqualityExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
JavaTypeHandler[shape="record", label="{JavaTypeHandler | {init()V|getDataFlowFacade()Lnet/sourceforge/pmd/sourcetypehandlers/VisitorStarter;|getSymbolFacade()Lnet/sourceforge/pmd/sourcetypehandlers/VisitorStarter;|access_000(Lnet/sourceforge/pmd/sourcetypehandlers/JavaTypeHandler;)Lnet/sourceforge/pmd/dfa/DataFlowFacade;|access_100(Lnet/sourceforge/pmd/sourcetypehandlers/JavaTypeHandler;)Lnet/sourceforge/pmd/symboltable/SymbolFacade;}"]
SimpleJavaNode_[shape="record", label="{SimpleJavaNode | {init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|init(I)V|jjtOpen()V|jjtClose()V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|childrenAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|toString()Ljava/lang/String;}"]
VariableAccessVisitor[shape="record", label="{VariableAccessVisitor | {init()V|compute(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;)V|compute(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;)V|computeNow(Lnet/sourceforge/pmd/ast/SimpleNode;)V|markUsages(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)Ljava/util/List;|collectDeclarations(Lnet/sourceforge/pmd/dfa/IDataFlowNode;)Ljava/util/Set;|addAccess(Ljava/util/Iterator;Lnet/sourceforge/pmd/dfa/IDataFlowNode;)V|addVariableAccess(ILnet/sourceforge/pmd/dfa/variableaccess/VariableAccess;Ljava/util/List;)V}"]
ASTBlockStatement[shape="record", label="{ASTBlockStatement | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|isAllocation()Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
ReportTree[shape="record", label="{ReportTree | {init()V|iterator()Ljava/util/Iterator;|size()I|getRootNode()Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;|addRuleViolation(Lnet/sourceforge/pmd/IRuleViolation;)V|equalsNodeInLevel(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)Z|isStringInLevel(Ljava/lang/String;)Z|access_000(Lnet/sourceforge/pmd/dfa/report/ReportTree;)Lnet/sourceforge/pmd/dfa/report/PackageNode;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
Token[shape="record", label="{Token | {init()V|toString()Ljava/lang/String;|newToken(I)Lnet/sourceforge/pmd/ast/Token;}"]
ASTDeclaration[shape="record", label="{ASTDeclaration | {getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|toString(Ljava/lang/String;)Ljava/lang/String;|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CPPTokenizer[shape="record", label="{CPPTokenizer | {init()V|tokenize(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V}"]
JavaParser[shape="record", label="{JavaParser | {setJDK13()V|setJDK15()V|checkForBadAssertUsage(Ljava/lang/String;Ljava/lang/String;)V|checkForBadStaticImportUsage()V|checkForBadVariableArgumentsUsage()V|checkForBadJDK15ForLoopSyntaxArgumentsUsage()V|checkForBadEnumUsage(Ljava/lang/String;Ljava/lang/String;)V|isNextTokenAnAssert()Z|isPrecededByComment(Lnet/sourceforge/pmd/ast/Token;)Z|CompilationUnit()Lnet/sourceforge/pmd/ast/ASTCompilationUnit;|PackageDeclaration()V|ImportDeclaration()V|Modifiers()I|TypeDeclaration()V|ClassOrInterfaceDeclaration(I)V|ExtendsList()V|ImplementsList()V|EnumDeclaration(I)V|EnumBody()V|EnumConstant()V|TypeParameters()V|TypeParameter()V|TypeBound()V|ClassOrInterfaceBody()V|ClassOrInterfaceBodyDeclaration()V|FieldDeclaration(I)V|VariableDeclarator()V|VariableDeclaratorId()V|VariableInitializer()V|ArrayInitializer()V|MethodDeclaration(I)V|MethodDeclarator()V|FormalParameters()V|FormalParameter()V|ConstructorDeclaration(I)V|ExplicitConstructorInvocation()V|Initializer()V|Type()V|ReferenceType()V|ClassOrInterfaceType()V|TypeArguments()V|TypeArgument()V|WildcardBounds()V|PrimitiveType()V|ResultType()V|Name()V|NameList()V|Expression()V|AssignmentOperator()V|ConditionalExpression()V|ConditionalOrExpression()V|ConditionalAndExpression()V|InclusiveOrExpression()V|ExclusiveOrExpression()V|AndExpression()V|EqualityExpression()V|InstanceOfExpression()V|RelationalExpression()V|ShiftExpression()V|AdditiveExpression()V|MultiplicativeExpression()V|UnaryExpression()V|PreIncrementExpression()V|PreDecrementExpression()V|UnaryExpressionNotPlusMinus()V|CastLookahead()V|PostfixExpression()V|CastExpression()V|PrimaryExpression()V|MemberSelector()V|PrimaryPrefix()V|PrimarySuffix()V|Literal()V|BooleanLiteral()V|NullLiteral()V|Arguments()V|ArgumentList()V|AllocationExpression()V|ArrayDimsAndInits()V|Statement()V|LabeledStatement()V|Block()V|BlockStatement()V|LocalVariableDeclaration()V|EmptyStatement()V|StatementExpression()V|SwitchStatement()V|SwitchLabel()V|IfStatement()V|WhileStatement()V|DoStatement()V|ForStatement()V|ForInit()V|StatementExpressionList()V|ForUpdate()V|BreakStatement()V|ContinueStatement()V|ReturnStatement()V|ThrowStatement()V|SynchronizedStatement()V|TryStatement()V|CatchStatement()V|FinallyStatement()V|AssertStatement()V|RUNSIGNEDSHIFT()V|RSIGNEDSHIFT()V|Annotation()V|NormalAnnotation()V|MarkerAnnotation()V|SingleMemberAnnotation()V|MemberValuePairs()V|MemberValuePair()V|MemberValue()V|MemberValueArrayInitializer()V|AnnotationTypeDeclaration(I)V|AnnotationTypeBody()V|AnnotationTypeMemberDeclaration()V|DefaultValue()V|jj_2_1(I)Z|jj_2_2(I)Z|jj_2_3(I)Z|jj_2_4(I)Z|jj_2_5(I)Z|jj_2_6(I)Z|jj_2_7(I)Z|jj_2_8(I)Z|jj_2_9(I)Z|jj_2_10(I)Z|jj_2_11(I)Z|jj_2_12(I)Z|jj_2_13(I)Z|jj_2_14(I)Z|jj_2_15(I)Z|jj_2_16(I)Z|jj_2_17(I)Z|jj_2_18(I)Z|jj_2_19(I)Z|jj_2_20(I)Z|jj_2_21(I)Z|jj_2_22(I)Z|jj_2_23(I)Z|jj_2_24(I)Z|jj_2_25(I)Z|jj_2_26(I)Z|jj_2_27(I)Z|jj_2_28(I)Z|jj_2_29(I)Z|jj_2_30(I)Z|jj_2_31(I)Z|jj_2_32(I)Z|jj_2_33(I)Z|jj_2_34(I)Z|jj_2_35(I)Z|jj_2_36(I)Z|jj_2_37(I)Z|jj_2_38(I)Z|jj_2_39(I)Z|jj_2_40(I)Z|jj_2_41(I)Z|jj_2_42(I)Z|jj_2_43(I)Z|jj_2_44(I)Z|jj_2_45(I)Z|jj_2_46(I)Z|jj_2_47(I)Z|jj_2_48(I)Z|jj_2_49(I)Z|jj_2_50(I)Z|jj_3R_309()Z|jj_3R_297()Z|jj_3R_282()Z|jj_3R_276()Z|jj_3R_268()Z|jj_3_22()Z|jj_3_21()Z|jj_3R_273()Z|jj_3R_74()Z|jj_3_20()Z|jj_3R_274()Z|jj_3R_267()Z|jj_3R_262()Z|jj_3R_296()Z|jj_3R_295()Z|jj_3R_294()Z|jj_3R_293()Z|jj_3R_261()Z|jj_3R_281()Z|jj_3R_258()Z|jj_3R_252()Z|jj_3R_257()Z|jj_3R_253()Z|jj_3R_247()Z|jj_3R_248()Z|jj_3R_229()Z|jj_3R_242()Z|jj_3R_220()Z|jj_3R_222()Z|jj_3R_213()Z|jj_3R_198()Z|jj_3R_175()Z|jj_3R_132()Z|jj_3R_241()Z|jj_3R_240()Z|jj_3R_239()Z|jj_3R_238()Z|jj_3R_237()Z|jj_3R_236()Z|jj_3R_235()Z|jj_3R_234()Z|jj_3R_233()Z|jj_3R_232()Z|jj_3R_231()Z|jj_3R_221()Z|jj_3R_230()Z|jj_3R_212()Z|jj_3R_83()Z|jj_3R_317()Z|jj_3R_304()Z|jj_3_18()Z|jj_3_19()Z|jj_3R_89()Z|jj_3R_130()Z|jj_3R_80()Z|jj_3R_126()Z|jj_3R_125()Z|jj_3R_124()Z|jj_3R_123()Z|jj_3R_122()Z|jj_3R_121()Z|jj_3R_120()Z|jj_3R_119()Z|jj_3R_78()Z|jj_3R_246()Z|jj_3R_266()Z|jj_3R_256()Z|jj_3R_260()Z|jj_3R_265()Z|jj_3_15()Z|jj_3R_173()Z|jj_3R_114()Z|jj_3R_172()Z|jj_3R_73()Z|jj_3_14()Z|jj_3_17()Z|jj_3_16()Z|jj_3R_171()Z|jj_3R_113()Z|jj_3R_112()Z|jj_3R_72()Z|jj_3R_285()Z|jj_3R_102()Z|jj_3_13()Z|jj_3R_65()Z|jj_3R_338()Z|jj_3_12()Z|jj_3R_277()Z|jj_3R_269()Z|jj_3_9()Z|jj_3_11()Z|jj_3R_106()Z|jj_3R_105()Z|jj_3R_68()Z|jj_3R_316()Z|jj_3_10()Z|jj_3R_286()Z|jj_3R_283()Z|jj_3R_278()Z|jj_3R_307()Z|jj_3R_291()Z|jj_3R_328()Z|jj_3R_337()Z|jj_3R_327()Z|jj_3R_315()Z|jj_3R_303()Z|jj_3_8()Z|jj_3_50()Z|jj_3R_284()Z|jj_3_49()Z|jj_3R_290()Z|jj_3R_292()Z|jj_3R_289()Z|jj_3R_254()Z|jj_3R_280()Z|jj_3_48()Z|jj_3R_306()Z|jj_3R_160()Z|jj_3R_288()Z|jj_3R_66()Z|jj_3R_104()Z|jj_3R_103()Z|jj_3R_67()Z|jj_3R_190()Z|jj_3R_318()Z|jj_3R_250()Z|jj_3R_305()Z|jj_3R_151()Z|jj_3R_150()Z|jj_3R_217()Z|jj_3R_91()Z|jj_3R_149()Z|jj_3R_287()Z|jj_3R_64()Z|jj_3_6()Z|jj_3_5()Z|jj_3R_249()Z|jj_3R_279()Z|jj_3R_94()Z|jj_3_7()Z|jj_3R_272()Z|jj_3R_243()Z|jj_3R_271()Z|jj_3R_223()Z|jj_3R_270()Z|jj_3R_90()Z|jj_3_4()Z|jj_3_3()Z|jj_3R_192()Z|jj_3R_264()Z|jj_3R_259()Z|jj_3R_326()Z|jj_3R_263()Z|jj_3R_255()Z|jj_3R_159()Z|jj_3R_194()Z|jj_3R_193()Z|jj_3_47()Z|jj_3R_98()Z|jj_3R_191()Z|jj_3_46()Z|jj_3R_203()Z|jj_3R_154()Z|jj_3R_325()Z|jj_3R_155()Z|jj_3R_153()Z|jj_3R_93()Z|jj_3R_158()Z|jj_3_2()Z|jj_3R_115()Z|jj_3R_92()Z|jj_3R_152()Z|jj_3R_335()Z|jj_3R_101()Z|jj_3R_314()Z|jj_3R_116()Z|jj_3R_61()Z|jj_3R_75()Z|jj_3R_302()Z|jj_3R_301()Z|jj_3R_100()Z|jj_3R_76()Z|jj_3R_99()Z|jj_3R_161()Z|jj_3R_63()Z|jj_3R_356()Z|jj_3R_313()Z|jj_3R_157()Z|jj_3R_355()Z|jj_3R_312()Z|jj_3R_349()Z|jj_3R_348()Z|jj_3R_156()Z|jj_3R_189()Z|jj_3R_97()Z|jj_3R_96()Z|jj_3R_95()Z|jj_3R_188()Z|jj_3R_347()Z|jj_3R_62()Z|jj_3R_346()Z|jj_3R_187()Z|jj_3R_367()Z|jj_3R_186()Z|jj_3R_345()Z|jj_3R_185()Z|jj_3R_184()Z|jj_3R_361()Z|jj_3R_60()Z|jj_3_45()Z|jj_3R_59()Z|jj_3R_366()Z|jj_3R_58()Z|jj_3R_57()Z|jj_3R_56()Z|jj_3R_55()Z|jj_3R_342()Z|jj_3R_54()Z|jj_3R_53()Z|jj_3R_365()Z|jj_3R_52()Z|jj_3R_51()Z|jj_3R_50()Z|jj_3R_364()Z|jj_3R_360()Z|jj_3_44()Z|jj_3R_49()Z|jj_3_1()Z|jj_3R_354()Z|jj_3R_88()Z|jj_3R_353()Z|jj_3R_352()Z|jj_3R_344()Z|jj_3R_343()Z|jj_3R_183()Z|jj_3R_182()Z|jj_3R_181()Z|jj_3_43()Z|jj_3R_180()Z|jj_3R_359()Z|jj_3R_358()Z|jj_3R_351()Z|jj_3R_341()Z|jj_3R_205()Z|jj_3_42()Z|jj_3R_179()Z|jj_3R_350()Z|jj_3R_202()Z|jj_3R_201()Z|jj_3R_200()Z|jj_3R_178()Z|jj_3R_199()Z|jj_3R_177()Z|jj_3R_87()Z|jj_3R_336()Z|jj_3R_133()Z|jj_3_41()Z|jj_3R_195()Z|jj_3R_204()Z|jj_3R_162()Z|jj_3R_85()Z|jj_3R_109()Z|jj_3_39()Z|jj_3_40()Z|jj_3R_108()Z|jj_3R_107()Z|jj_3_38()Z|jj_3R_69()Z|jj_3_35()Z|jj_3R_176()Z|jj_3R_84()Z|jj_3R_148()Z|jj_3R_147()Z|jj_3R_146()Z|jj_3R_145()Z|jj_3R_144()Z|jj_3R_143()Z|jj_3R_142()Z|jj_3R_141()Z|jj_3R_140()Z|jj_3R_139()Z|jj_3R_138()Z|jj_3R_137()Z|jj_3R_136()Z|jj_3R_135()Z|jj_3R_225()Z|jj_3_37()Z|jj_3R_134()Z|jj_3R_86()Z|jj_3R_245()Z|jj_3R_251()Z|jj_3_34()Z|jj_3R_244()Z|jj_3_36()Z|jj_3R_224()Z|jj_3R_227()Z|jj_3R_197()Z|jj_3R_226()Z|jj_3R_131()Z|jj_3R_81()Z|jj_3_33()Z|jj_3R_111()Z|jj_3R_170()Z|jj_3R_71()Z|jj_3R_174()Z|jj_3R_219()Z|jj_3R_218()Z|jj_3R_228()Z|jj_3R_363()Z|jj_3R_211()Z|jj_3R_210()Z|jj_3R_209()Z|jj_3R_208()Z|jj_3R_207()Z|jj_3R_196()Z|jj_3R_206()Z|jj_3R_129()Z|jj_3R_128()Z|jj_3_28()Z|jj_3R_127()Z|jj_3_32()Z|jj_3_31()Z|jj_3R_331()Z|jj_3R_79()Z|jj_3_30()Z|jj_3_29()Z|jj_3R_169()Z|jj_3R_168()Z|jj_3_27()Z|jj_3R_167()Z|jj_3R_166()Z|jj_3R_165()Z|jj_3R_164()Z|jj_3R_110()Z|jj_3R_163()Z|jj_3R_362()Z|jj_3R_357()Z|jj_3R_82()Z|jj_3_26()Z|jj_3R_333()Z|jj_3R_70()Z|jj_3R_321()Z|jj_3R_330()Z|jj_3R_340()Z|jj_3R_334()Z|jj_3R_339()Z|jj_3_25()Z|jj_3R_216()Z|jj_3R_118()Z|jj_3_23()Z|jj_3R_310()Z|jj_3R_117()Z|jj_3R_77()Z|jj_3_24()Z|jj_3R_324()Z|jj_3R_332()Z|jj_3R_323()Z|jj_3R_322()Z|jj_3R_311()Z|jj_3R_320()Z|jj_3R_308()Z|jj_3R_329()Z|jj_3R_215()Z|jj_3R_319()Z|jj_3R_275()Z|jj_3R_214()Z|jj_3R_300()Z|jj_3R_299()Z|jj_3R_298()Z|jj_la1_0()V|jj_la1_1()V|jj_la1_2()V|jj_la1_3()V|init(Lnet/sourceforge/pmd/ast/CharStream;)V|ReInit(Lnet/sourceforge/pmd/ast/CharStream;)V|init(Lnet/sourceforge/pmd/ast/JavaParserTokenManager;)V|ReInit(Lnet/sourceforge/pmd/ast/JavaParserTokenManager;)V|jj_consume_token(I)Lnet/sourceforge/pmd/ast/Token;|jj_scan_token(I)Z|getNextToken()Lnet/sourceforge/pmd/ast/Token;|getToken(I)Lnet/sourceforge/pmd/ast/Token;|jj_ntk()I|jj_add_error_token(II)V|generateParseException()Lnet/sourceforge/pmd/ast/ParseException;|enable_tracing()V|disable_tracing()V|jj_rescan_token()V|jj_save(II)V|clinit()V}"]
LongClassRule[shape="record", label="{LongClassRule | {init()V|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/util/viewer/gui/EvaluationResultsPanel;)V|valueChanged(Ljavax/swing/event/ListSelectionEvent;)V}"]
Linker[shape="record", label="{Linker | {init(Ljava/util/List;Ljava/util/List;)V|computePaths()V|computeDo(II)V|computeFor(II)V|computeSwitch(II)V|computeWhile(II)V|computeIf(III)V|computeIf(II)V}"]
SourceFileScope[shape="record", label="{SourceFileScope | {init()V|init(Ljava/lang/String;)V|getEnclosingClassScope()Lnet/sourceforge/pmd/symboltable/ClassScope;|getEnclosingMethodScope()Lnet/sourceforge/pmd/symboltable/MethodScope;|getPackageName()Ljava/lang/String;|getEnclosingSourceFileScope()Lnet/sourceforge/pmd/symboltable/SourceFileScope;|addDeclaration(Lnet/sourceforge/pmd/symboltable/ClassNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)V|addDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|getClassDeclarations()Ljava/util/Map;|getVariableDeclarations()Ljava/util/Map;|addVariableNameOccurrence(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|toString()Ljava/lang/String;|findVariableHere(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;}"]
Applier[shape="record", label="{Applier | {init()V|apply(Lnet/sourceforge/pmd/util/UnaryFunction;Ljava/util/Iterator;)V}"]
LookaheadSuccess[shape="record", label="{LookaheadSuccess | {init()V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser$1;)V}"]
StatisticalRule[shape="record", label="{StatisticalRule | {init()V|addDataPoint(Lnet/sourceforge/pmd/stat/DataPoint;)V|apply(Ljava/util/List;Lnet/sourceforge/pmd/RuleContext;)V|getMean()D|getStdDev()D|applyMinimumValue(Ljava/util/SortedSet;D)Ljava/util/SortedSet;|applyTopScore(Ljava/util/SortedSet;I)Ljava/util/SortedSet;|makeViolations(Lnet/sourceforge/pmd/RuleContext;Ljava/util/Set;)V|clinit()V}"]
PHPTokenizer[shape="record", label="{PHPTokenizer | {init()V|tokenize(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V}"]
LocalVariableCouldBeFinal[shape="record", label="{LocalVariableCouldBeFinal | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
NameOccurrence[shape="record", label="{NameOccurrence | {init(Lnet/sourceforge/pmd/ast/SimpleNode;Ljava/lang/String;)V|setIsMethodOrConstructorInvocation()V|setArgumentCount(I)V|getArgumentCount()I|isMethodOrConstructorInvocation()Z|setNameWhichThisQualifies(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)V|getNameForWhichThisIsAQualifier()Lnet/sourceforge/pmd/symboltable/NameOccurrence;|isPartOfQualifiedName()Z|getLocation()Lnet/sourceforge/pmd/ast/SimpleNode;|isOnRightHandSide()Z|isOnLeftHandSide()Z|isCompoundAssignment(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isStandAlonePostfix(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|thirdChildHasDottedName(Lnet/sourceforge/pmd/ast/SimpleNode;)Z|isSelfAssignment()Z|isThisOrSuper()Z|equals(Ljava/lang/Object;)Z|hashCode()I|getImage()Ljava/lang/String;|toString()Ljava/lang/String;}"]
MethodScope[shape="record", label="{MethodScope | {init(Lnet/sourceforge/pmd/ast/SimpleNode;)V|getEnclosingMethodScope()Lnet/sourceforge/pmd/symboltable/MethodScope;|getVariableDeclarations()Ljava/util/Map;|addVariableNameOccurrence(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|addDeclaration(Lnet/sourceforge/pmd/symboltable/VariableNameDeclaration;)V|findVariableHere(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;|getName()Ljava/lang/String;|toString()Ljava/lang/String;}"]
FileReporter[shape="record", label="{FileReporter | {init(Ljava/io/File;)V|report(Ljava/lang/String;)V}"]
ExceptionSignatureDeclaration[shape="record", label="{ExceptionSignatureDeclaration | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|evaluateExceptions(Ljava/util/List;Ljava/lang/Object;)V|hasDeclaredExceptionInSignature(Lnet/sourceforge/pmd/ast/ASTName;)Z|isParentSignatureDeclaration(Lnet/sourceforge/pmd/ast/ASTName;)Z|hasContent(Ljava/util/List;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
MatchCode[shape="record", label="{MatchCode | {init()V|init(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/TokenEntry;)V|hashCode()I|equals(Ljava/lang/Object;)Z|setFirst(I)V|setSecond(I)V}"]
ClassNamingConventions[shape="record", label="{ClassNamingConventions | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTJspDirective[shape="record", label="{ASTJspDirective | {getName()Ljava/lang/String;|setName(Ljava/lang/String;)V|toString(Ljava/lang/String;)Ljava/lang/String;|init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ASTBlock[shape="record", label="{ASTBlock | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;|containsComment()Z|setContainsComment()V}"]
TreeIterator[shape="record", label="{TreeIterator | {init(Lnet/sourceforge/pmd/dfa/report/ReportTree;)V|remove()V|hasNext()Z|next()Ljava/lang/Object;|getNext()Ljava/lang/Object;|init(Lnet/sourceforge/pmd/dfa/report/ReportTree;Lnet/sourceforge/pmd/dfa/report/ReportTree$1;)V}"]
Metric[shape="record", label="{Metric | {init(Ljava/lang/String;IDDDDD)V|getMetricName()Ljava/lang/String;|getLowValue()D|getHighValue()D|getAverage()D|getStandardDeviation()D|getCount()I|getTotal()D}"]
ASTArguments[shape="record", label="{ASTArguments | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|getArgumentCount()I|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ParseException[shape="record", label="{ParseException | {init(Lnet/sourceforge/pmd/jsp/ast/Token;[[I[Ljava/lang/String;)V|init()V|init(Ljava/lang/String;)V|getMessage()Ljava/lang/String;|add_escapes(Ljava/lang/String;)Ljava/lang/String;}"]
JavaParserVisitorAdapter[shape="record", label="{JavaParserVisitorAdapter | {init()V|visit(Lnet/sourceforge/pmd/ast/SimpleJavaNode;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTModifiers;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExtendsList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImplementsList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeParameters;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberSelector;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeBound;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceBody;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceBodyDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumBody;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumConstant;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTReferenceType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeArguments;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeArgument;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTWildcardBounds;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTNormalAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMarkerAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSingleMemberAnnotation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValuePairs;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValuePair;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValue;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMemberValueArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotationTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotationTypeBody;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAnnotationTypeMemberDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTDefaultValue;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTRUNSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTRSIGNEDSHIFT;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEnumElement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAssertStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTypeDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarationLookahead;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableDeclaratorId;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTVariableInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArrayInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFormalParameters;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFormalParameter;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExplicitConstructorInvocation;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTInitializer;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTResultType;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTName;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTNameList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAssignmentOperator;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalOrExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTConditionalAndExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTInclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTExclusiveOrExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAndExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEqualityExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTInstanceOfExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTRelationalExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTShiftExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAdditiveExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTMultiplicativeExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPreIncrementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPreDecrementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTUnaryExpressionNotPlusMinus;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCastLookahead;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCastExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimaryPrefix;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTPrimarySuffix;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBooleanLiteral;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTNullLiteral;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArguments;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArgumentList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTAllocationExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTArrayDimsAndInits;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLabeledStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBlock;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBlockStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLocalVariableDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTEmptyStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatementExpression;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSwitchLabel;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTIfStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTWhileStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTDoStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForInit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTStatementExpressionList;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTForUpdate;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTBreakStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTContinueStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTReturnStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTThrowStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTSynchronizedStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTTryStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTFinallyStatement;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTCatchStatement;Ljava/lang/Object;)Ljava/lang/Object;}"]
Search[shape="record", label="{Search | {init(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)V|execute()V|execute(Lnet/sourceforge/pmd/symboltable/Scope;)V|getResult()Lnet/sourceforge/pmd/symboltable/NameDeclaration;|searchUpward(Lnet/sourceforge/pmd/symboltable/NameOccurrence;Lnet/sourceforge/pmd/symboltable/Scope;)Lnet/sourceforge/pmd/symboltable/NameDeclaration;}"]
ASTConditionalOrExpression[shape="record", label="{ASTConditionalOrExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
1[shape="record", label="{1 | {init(Lorg/jaxen/JaxenException;)V|printStackTrace()V|printStackTrace(Ljava/io/PrintWriter;)V|printStackTrace(Ljava/io/PrintStream;)V|getMessage()Ljava/lang/String;}"]
FileDataSource[shape="record", label="{FileDataSource | {init(Ljava/io/File;)V|getInputStream()Ljava/io/InputStream;|getNiceFileName(ZLjava/lang/String;)Ljava/lang/String;|glomName(ZLjava/lang/String;Ljava/io/File;)Ljava/lang/String;|trimAnyPathSep(Ljava/lang/String;)Ljava/lang/String;}"]
CodeLoader[shape="record", label="{CodeLoader | {init()V|getCode()Ljava/util/List;|getFileName()Ljava/lang/String;|getReader()Ljava/io/Reader;|load()Ljava/util/List;}"]
ReportHTMLPrintVisitor[shape="record", label="{ReportHTMLPrintVisitor | {init()V|write(Ljava/lang/String;Ljava/lang/StringBuffer;)V|displayRuleViolation(Lnet/sourceforge/pmd/IRuleViolation;)Ljava/lang/String;|visit(Lnet/sourceforge/pmd/dfa/report/AbstractReportNode;)V}"]
ASTVariableInitializer[shape="record", label="{ASTVariableInitializer | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
ReportListener[shape="record", label="{ABSTRACT_ReportListener | ruleViolationAdded(Lnet/sourceforge/pmd/IRuleViolation;)V|metricAdded(Lnet/sourceforge/pmd/stat/Metric;)V}"]
JavaLanguage[shape="record", label="{JavaLanguage | {init()V|init(Ljava/util/Properties;)V|getTokenizer()Lnet/sourceforge/pmd/cpd/Tokenizer;|getFileFilter()Ljava/io/FilenameFilter;}"]
ASTUnparsedText[shape="record", label="{ASTUnparsedText | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
CPDTask[shape="record", label="{CPDTask | {init()V|execute()V|createLanguage()Lnet/sourceforge/pmd/cpd/Language;|report(Lnet/sourceforge/pmd/cpd/CPD;)V|tokenizeFiles(Lnet/sourceforge/pmd/cpd/CPD;)V|analyzeCode(Lnet/sourceforge/pmd/cpd/CPD;)J|createRenderer()Lnet/sourceforge/pmd/cpd/Renderer;|validateFields()V|addFileset(Lorg/apache/tools/ant/types/FileSet;)V|setMinimumTokenCount(I)V|setIgnoreLiterals(Z)V|setIgnoreIdentifiers(Z)V|setOutputFile(Ljava/io/File;)V|setFormat(Lnet/sourceforge/pmd/cpd/CPDTask$FormatAttribute;)V|setLanguage(Lnet/sourceforge/pmd/cpd/CPDTask$LanguageAttribute;)V}"]
LinkerException[shape="record", label="{LinkerException | {init()V|init(Ljava/lang/String;)V}"]
DaaRule[shape="record", label="{DaaRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTMethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|execute(Lnet/sourceforge/pmd/dfa/pathfinder/CurrentPath;)V}"]
Tokenizer[shape="record", label="{ABSTRACT_Tokenizer | tokenize(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V}"]
RubyTokenizer[shape="record", label="{RubyTokenizer | {init()V|tokenize(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V|getTokenFromLine(Ljava/lang/String;Ljava/lang/StringBuffer;I)I|parseString(Ljava/lang/String;Ljava/lang/StringBuffer;IC)I|ignoreCharacter(C)Z|isString(C)Z|isComment(C)Z|getCommentToken(Ljava/lang/String;Ljava/lang/StringBuffer;I)I|isIgnorableString(Ljava/lang/String;)Z}"]
ASTInstanceOfExpression[shape="record", label="{ASTInstanceOfExpression | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
UnusedPrivateMethodRule[shape="record", label="{UnusedPrivateMethodRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|findUnique(Ljava/util/Map;)Ljava/util/Set;|calledFromOutsideItself(Ljava/util/List;Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)Z|privateAndNotExcluded(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)Z|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
RubyLanguage[shape="record", label="{RubyLanguage | {init()V|getTokenizer()Lnet/sourceforge/pmd/cpd/Tokenizer;|getFileFilter()Ljava/io/FilenameFilter;}"]
GTToken[shape="record", label="{GTToken | {init()V}"]
Usage[shape="record", label="{Usage | {init(ILnet/sourceforge/pmd/dfa/IDataFlowNode;)V|toString()Ljava/lang/String;}"]
MethodNameDeclaration[shape="record", label="{MethodNameDeclaration | {init(Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;)V|getParameterCount()I|getMethodNameDeclaratorNode()Lnet/sourceforge/pmd/ast/ASTMethodDeclarator;|getParameterDisplaySignature()Ljava/lang/String;|equals(Ljava/lang/Object;)Z|hashCode()I|toString()Ljava/lang/String;|class_(Ljava/lang/String;)Ljava/lang/Class;}"]
SymbolTableTestRule[shape="record", label="{SymbolTableTestRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;|findSuffix(Lnet/sourceforge/pmd/symboltable/MethodNameDeclaration;)Ljava/lang/String;}"]
AvoidDuplicateLiteralsRule[shape="record", label="{AvoidDuplicateLiteralsRule | {init()V|visit(Lnet/sourceforge/pmd/ast/ASTCompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;|visit(Lnet/sourceforge/pmd/ast/ASTLiteral;Ljava/lang/Object;)Ljava/lang/Object;}"]
NameFinder[shape="record", label="{NameFinder | {init(Lnet/sourceforge/pmd/ast/ASTPrimaryExpression;)V|getNames()Ljava/util/List;|checkForNameChild(Lnet/sourceforge/pmd/ast/SimpleNode;)V|add(Lnet/sourceforge/pmd/symboltable/NameOccurrence;)V|toString()Ljava/lang/String;}"]
2[shape="record", label="{2 | {init(Lnet/sourceforge/pmd/util/designer/Designer;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V}"]
ASTJspExpressionInAttribute[shape="record", label="{ASTJspExpressionInAttribute | {init(I)V|init(Lnet/sourceforge/pmd/jsp/ast/JspParser;I)V|jjtAccept(Lnet/sourceforge/pmd/jsp/ast/JspParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
VisitorStarter[shape="record", label="{ABSTRACT_VisitorStarter | start(Ljava/lang/Object;)V}"]
1[shape="record", label="{1 | {init(Lnet/sourceforge/pmd/util/designer/Designer;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V}"]
3[shape="record", label="{3 | {init(Lnet/sourceforge/pmd/util/designer/Designer;Ljavax/swing/JTextField;Ljavax/swing/JTextField;Ljavax/swing/JTextField;Ljavax/swing/JTextArea;)V|actionPerformed(Ljava/awt/event/ActionEvent;)V}"]
ASTNodePopupMenu_[shape="record", label="{ASTNodePopupMenu | {init(Lnet/sourceforge/pmd/util/viewer/model/ViewerModel;Lnet/sourceforge/pmd/ast/SimpleNode;)V|init()V}"]
ASTAnnotationTypeMemberDeclaration[shape="record", label="{ASTAnnotationTypeMemberDeclaration | {init(I)V|init(Lnet/sourceforge/pmd/ast/JavaParser;I)V|jjtAccept(Lnet/sourceforge/pmd/ast/JavaParserVisitor;Ljava/lang/Object;)Ljava/lang/Object;}"]
Dimensionable -> ASTFieldDeclaration
Dimensionable -> ASTFormalParameter
Dimensionable -> ASTLocalVariableDeclaration
Dimensionable -> ASTPrimitiveType
Dimensionable -> ASTReferenceType
Resolver -> CurrentPackageResolver
Resolver -> ExplicitImportResolver
Resolver -> FullyQualifiedNameResolver
Resolver -> ImplicitImportResolver
Resolver -> ImportOnDemandResolver
Resolver -> PrimitiveTypeResolver
Resolver -> VoidResolver
SourceTypeHandler -> JavaTypeHandler
SourceTypeHandler -> JspTypeHandler
CharStream -> JavaCharStream
CharStream -> CharStream
JspParserTreeConstants -> JspParser
UnaryFunction -> ImageFinderFunction
UnaryFunction -> VariableUsageFinderFunction
DataSource -> FileDataSource
DataSource -> ZipDataSource
JspParserVisitorAdapter -> AbstractJspRule
Node_ -> SimpleNode_
JavaParserTreeConstants -> JavaParser
ParseException -> ParseException
JavaParserConstants -> JavaParserTokenManager
AbstractNameDeclaration -> ClassNameDeclaration
AbstractNameDeclaration -> MethodNameDeclaration
AbstractNameDeclaration -> VariableNameDeclaration
Executable -> DaaRule
Executable -> UselessAssignment
AbstractOptimizationRule -> AvoidInstantiatingObjectsInLoops
AbstractOptimizationRule -> LocalVariableCouldBeFinal
AbstractOptimizationRule -> MethodArgumentCouldBeFinal
SimpleNode_ -> ASTAttribute
SimpleNode_ -> ASTAttributeValue
SimpleNode_ -> ASTCData
SimpleNode_ -> ASTCommentTag
SimpleNode_ -> ASTCompilationUnit
SimpleNode_ -> ASTContent
SimpleNode_ -> ASTDeclaration
SimpleNode_ -> ASTDoctypeDeclaration
SimpleNode_ -> ASTDoctypeExternalId
SimpleNode_ -> ASTElExpression
SimpleNode_ -> ASTElement
SimpleNode_ -> ASTJspComment
SimpleNode_ -> ASTJspDeclaration
SimpleNode_ -> ASTJspDeclarations
SimpleNode_ -> ASTJspDirective
SimpleNode_ -> ASTJspDirectiveAttribute
SimpleNode_ -> ASTJspDocument
SimpleNode_ -> ASTJspExpression
SimpleNode_ -> ASTJspExpressionInAttribute
SimpleNode_ -> ASTJspScriptlet
SimpleNode_ -> ASTText
SimpleNode_ -> ASTUnparsedText
SimpleNode_ -> ASTValueBinding
NameDeclaration -> AbstractNameDeclaration
SyntaxErrorException -> StartAndEndTagMismatchException
Rule -> AbstractRule
Rule -> CommonAbstractRule
Rule -> SymbolTableTestRule
Rule -> UnnecessaryConversionTemporary
Rule -> JUnitTestsShouldContainAsserts
Rule -> AbstractOptimizationRule
EvalPackage -> NullEvalPackage
AbstractScope -> ClassScope
AbstractScope -> LocalScope
AbstractScope -> MethodScope
AbstractScope -> SourceFileScope
CharStream -> JspCharStream
NodeIterator_ -> 1
NodeIterator_ -> 2
NodeIterator_ -> 3
NodeIterator_ -> 4
NodeIterator_ -> 5
IRuleViolation -> RuleViolation
JavaParserVisitor -> JavaParserVisitorAdapter
AbstractRule -> AccessorClassGeneration
AbstractRule -> AvoidCallingFinalize
AbstractRule -> AvoidDeeplyNestedIfStmtsRule
AbstractRule -> AvoidFieldNameMatchingMethodName
AbstractRule -> AvoidFieldNameMatchingTypeName
AbstractRule -> AvoidNonConstructorMethodsWithClassName
AbstractRule -> AvoidReassigningParameters
AbstractRule -> BeanMembersShouldSerializeRule
AbstractRule -> ClassNamingConventions
AbstractRule -> CloseResource
AbstractRule -> ConstructorCallsOverridableMethod
AbstractRule -> CouplingBetweenObjects
AbstractRule -> CyclomaticComplexity
AbstractRule -> DoubleCheckedLocking
AbstractRule -> IdempotentOperations
AbstractRule -> MethodNamingConventions
AbstractRule -> MethodWithSameNameAsEnclosingClass
AbstractRule -> SimplifyBooleanReturns
AbstractRule -> SingularField
AbstractRule -> StringConcatenationRule
AbstractRule -> SuspiciousOctalEscape
AbstractRule -> UnusedFormalParameterRule
AbstractRule -> UnusedLocalVariableRule
AbstractRule -> UnusedModifier
AbstractRule -> UnusedPrivateFieldRule
AbstractRule -> UnusedPrivateMethodRule
AbstractRule -> UselessOverridingMethod
AbstractRule -> VariableNamingConventions
AbstractRule -> AssignmentToNonFinalStatic
AbstractRule -> CompareObjectsWithEquals
AbstractRule -> ConfusingTernary
AbstractRule -> ExceptionAsFlowControl
AbstractRule -> ImmutableField
AbstractRule -> LooseCoupling
AbstractRule -> NullAssignmentRule
AbstractRule -> OnlyOneReturnRule
AbstractRule -> PositionalIteratorRule
AbstractRule -> PreserveStackTrace
AbstractRule -> TooManyFields
AbstractRule -> UnnecessaryLocalBeforeReturn
AbstractRule -> UnsynchronizedStaticDateFormatter
AbstractRule -> UseSingleton
AbstractRule -> DuplicateImportsRule
AbstractRule -> ImportFromSamePackageRule
AbstractRule -> UnusedImportsRule
AbstractRule -> JUnitAssertionsShouldIncludeMessage
AbstractRule -> TestClassWithoutTestCases
AbstractRule -> AvoidCatchingThrowable
AbstractRule -> ExceptionSignatureDeclaration
AbstractRule -> AppendCharacterWithChar
AbstractRule -> AvoidDuplicateLiteralsRule
AbstractRule -> ConsecutiveLiteralAppends
AbstractRule -> InefficientEmptyStringCheck
AbstractRule -> InefficientStringBuffering
AbstractRule -> InsufficientStringBufferDeclaration
AbstractRule -> StringInstantiation
AbstractRule -> StringToStringRule
AbstractRule -> UnnecessaryCaseChange
AbstractRule -> UseIndexOfChar
AbstractRule -> UseStringBufferLength
AbstractRule -> AbstractSunSecureRule
AbstractRule -> StatisticalRule
AbstractRule -> DFAGraphRule
CommonAbstractRule -> XPathRule
TargetJDKVersion -> TargetJDK1_3
TargetJDKVersion -> TargetJDK1_4
TargetJDKVersion -> TargetJDK1_5
Scope -> AbstractScope
Scope -> DummyScope
Callback -> GcCallback
Callback -> MMTkCallback
Callback -> MyCallback
ExcessiveLengthRule -> LongClassRule
ExcessiveLengthRule -> LongMethodRule
ReportVisitor -> ReportHTMLPrintVisitor
Parser -> Java13Parser
Parser -> Java14Parser
Parser -> Java15Parser
ViewerModelListener -> ASTPanel
ViewerModelListener -> EvaluationResultsPanel
ViewerModelListener -> MainFrame
ViewerModelListener -> SourceCodePanel
ViewerModelListener -> XPathPanel
CPPParserConstants -> CPPParserTokenManager
AbstractReportNode_ -> ClassNode_
AbstractReportNode_ -> PackageNode_
AbstractReportNode_ -> ViolationNode_
AbstractRenderer -> CSVRenderer
AbstractRenderer -> EmacsRenderer
AbstractRenderer -> HTMLRenderer
AbstractRenderer -> IDEAJRenderer
AbstractRenderer -> PapariTextRenderer
AbstractRenderer -> SummaryHTMLRenderer
AbstractRenderer -> TextPadRenderer
AbstractRenderer -> TextRenderer
AbstractRenderer -> VBHTMLRenderer
AbstractRenderer -> XMLRenderer
AbstractRenderer -> YAHTMLRenderer
Language -> AnyLanguage
Language -> CPPLanguage
Language -> JavaLanguage
Language -> PHPLanguage
Language -> RubyLanguage
ExcessiveNodeCountRule_ -> ExcessiveImports
ExcessiveNodeCountRule_ -> ExcessivePublicCount
ExcessiveNodeCountRule_ -> LongParameterListRule
HasLines -> CodeEditorTextPane
Benchmark -> PmdHarness
AbstractJspRule -> DuplicateJspImports
AbstractJspRule -> NoInlineStyleInformation
Renderer -> SimpleRenderer
DataFlowNode_ -> StartOrEndDataFlowNode_
JspParserConstants -> JspParserTokenManager
SimpleNode_ -> SimpleJavaNode_
JspParserVisitor -> JspParserVisitorAdapter
AccessNode_ -> ASTAnnotationTypeDeclaration
AccessNode_ -> ASTClassOrInterfaceDeclaration
AccessNode_ -> ASTConstructorDeclaration
AccessNode_ -> ASTEnumDeclaration
AccessNode_ -> ASTMethodDeclaration
CanSuppressWarnings -> ASTClassOrInterfaceBodyDeclaration
CanSuppressWarnings -> ASTTypeDeclaration
AbstractSunSecureRule -> ArrayIsStoredDirectly
AbstractSunSecureRule -> MethodReturnsInternalArray
CPDListener -> CPDNullListener
CPDListener -> GUI
ConfigFileConstants -> ConfigFile
ConfigFileConstants -> ConfigFileTokenManager
IDataFlowNode_ -> DataFlowNode_
Node_ -> JavaNode_
Node_ -> Node_
Renderer -> AbstractRenderer
JavaTypeHandler -> Java13Handler
JavaTypeHandler -> Java14Handler
JavaTypeHandler -> Java15Handler
SimpleJavaNode_ -> ASTAdditiveExpression
SimpleJavaNode_ -> ASTAllocationExpression
SimpleJavaNode_ -> ASTAndExpression
SimpleJavaNode_ -> ASTAnnotation
SimpleJavaNode_ -> ASTAnnotationTypeBody
SimpleJavaNode_ -> ASTAnnotationTypeMemberDeclaration
SimpleJavaNode_ -> ASTArgumentList
SimpleJavaNode_ -> ASTArguments
SimpleJavaNode_ -> ASTArrayDimsAndInits
SimpleJavaNode_ -> ASTArrayInitializer
SimpleJavaNode_ -> ASTAssertStatement
SimpleJavaNode_ -> ASTAssignmentOperator
SimpleJavaNode_ -> ASTBlock
SimpleJavaNode_ -> ASTBlockStatement
SimpleJavaNode_ -> ASTBooleanLiteral
SimpleJavaNode_ -> ASTBreakStatement
SimpleJavaNode_ -> ASTCastExpression
SimpleJavaNode_ -> ASTCastLookahead
SimpleJavaNode_ -> ASTCatchStatement
SimpleJavaNode_ -> ASTClassOrInterfaceBody
SimpleJavaNode_ -> ASTClassOrInterfaceType
SimpleJavaNode_ -> ASTConditionalAndExpression
SimpleJavaNode_ -> ASTConditionalExpression
SimpleJavaNode_ -> ASTConditionalOrExpression
SimpleJavaNode_ -> ASTContinueStatement
SimpleJavaNode_ -> ASTDefaultValue
SimpleJavaNode_ -> ASTDoStatement
SimpleJavaNode_ -> ASTEmptyStatement
SimpleJavaNode_ -> ASTEnumBody
SimpleJavaNode_ -> ASTEnumConstant
SimpleJavaNode_ -> ASTEnumElement
SimpleJavaNode_ -> ASTEqualityExpression
SimpleJavaNode_ -> ASTExclusiveOrExpression
SimpleJavaNode_ -> ASTExplicitConstructorInvocation
SimpleJavaNode_ -> ASTExpression
SimpleJavaNode_ -> ASTExtendsList
SimpleJavaNode_ -> ASTFinallyStatement
SimpleJavaNode_ -> ASTForInit
SimpleJavaNode_ -> ASTForStatement
SimpleJavaNode_ -> ASTForUpdate
SimpleJavaNode_ -> ASTFormalParameters
SimpleJavaNode_ -> ASTIfStatement
SimpleJavaNode_ -> ASTImplementsList
SimpleJavaNode_ -> ASTImportDeclaration
SimpleJavaNode_ -> ASTInclusiveOrExpression
SimpleJavaNode_ -> ASTInitializer
SimpleJavaNode_ -> ASTInstanceOfExpression
SimpleJavaNode_ -> ASTLabeledStatement
SimpleJavaNode_ -> ASTLiteral
SimpleJavaNode_ -> ASTMarkerAnnotation
SimpleJavaNode_ -> ASTMemberSelector
SimpleJavaNode_ -> ASTMemberValue
SimpleJavaNode_ -> ASTMemberValueArrayInitializer
SimpleJavaNode_ -> ASTMemberValuePair
SimpleJavaNode_ -> ASTMemberValuePairs
SimpleJavaNode_ -> ASTMethodDeclarationLookahead
SimpleJavaNode_ -> ASTMethodDeclarator
SimpleJavaNode_ -> ASTModifiers
SimpleJavaNode_ -> ASTMultiplicativeExpression
SimpleJavaNode_ -> ASTName
SimpleJavaNode_ -> ASTNameList
SimpleJavaNode_ -> ASTNormalAnnotation
SimpleJavaNode_ -> ASTNullLiteral
SimpleJavaNode_ -> ASTPackageDeclaration
SimpleJavaNode_ -> ASTPostfixExpression
SimpleJavaNode_ -> ASTPreDecrementExpression
SimpleJavaNode_ -> ASTPreIncrementExpression
SimpleJavaNode_ -> ASTPrimaryExpression
SimpleJavaNode_ -> ASTPrimaryPrefix
SimpleJavaNode_ -> ASTPrimarySuffix
SimpleJavaNode_ -> ASTRSIGNEDSHIFT
SimpleJavaNode_ -> ASTRUNSIGNEDSHIFT
SimpleJavaNode_ -> ASTRelationalExpression
SimpleJavaNode_ -> ASTResultType
SimpleJavaNode_ -> ASTReturnStatement
SimpleJavaNode_ -> ASTShiftExpression
SimpleJavaNode_ -> ASTSingleMemberAnnotation
SimpleJavaNode_ -> ASTStatement
SimpleJavaNode_ -> ASTStatementExpression
SimpleJavaNode_ -> ASTStatementExpressionList
SimpleJavaNode_ -> ASTSwitchLabel
SimpleJavaNode_ -> ASTSwitchStatement
SimpleJavaNode_ -> ASTSynchronizedStatement
SimpleJavaNode_ -> ASTThrowStatement
SimpleJavaNode_ -> ASTTryStatement
SimpleJavaNode_ -> ASTType
SimpleJavaNode_ -> ASTTypeArgument
SimpleJavaNode_ -> ASTTypeArguments
SimpleJavaNode_ -> ASTTypeBound
SimpleJavaNode_ -> ASTTypeParameter
SimpleJavaNode_ -> ASTTypeParameters
SimpleJavaNode_ -> ASTUnaryExpression
SimpleJavaNode_ -> ASTUnaryExpressionNotPlusMinus
SimpleJavaNode_ -> ASTVariableDeclarator
SimpleJavaNode_ -> ASTVariableDeclaratorId
SimpleJavaNode_ -> ASTVariableInitializer
SimpleJavaNode_ -> ASTWhileStatement
SimpleJavaNode_ -> ASTWildcardBounds
SimpleJavaNode_ -> AccessNode_
Token -> GTToken
StatisticalRule -> ExcessiveLengthRule
StatisticalRule -> ExcessiveNodeCountRule_
StatisticalRule -> SwitchDensityRule
ParseException -> SyntaxErrorException
JavaParserVisitorAdapter -> DataFlowFacade
JavaParserVisitorAdapter -> StatementAndBraceFinder
JavaParserVisitorAdapter -> VariableAccessVisitor
JavaParserVisitorAdapter -> OccurrenceFinder
JavaParserVisitorAdapter -> ScopeAndDeclarationFinder
JavaParserVisitorAdapter -> SymbolTableViewer
CodeLoader -> FileCodeLoader
CodeLoader -> StringCodeLoader
Tokenizer -> AnyTokenizer
Tokenizer -> CPPTokenizer
Tokenizer -> JavaTokenizer
Tokenizer -> PHPTokenizer
Tokenizer -> RubyTokenizer
VisitorStarter -> DummyVisitorStarter
VisitorStarter -> JspSymbolFacade

}
